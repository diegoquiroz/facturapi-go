/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi-go

import (
	"encoding/json"
)

// checks if the OrganizationCustomization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationCustomization{}

// OrganizationCustomization Configuración de personalización de la organización, que se utilizarán para reflejar el branding y las preferencias de PDFs de la organización. Estos datos se pueden actualizar en cualquier momento. 
type OrganizationCustomization struct {
	// Indica si la organización ya tiene un logotipo cargado.
	HasLogo *bool `json:"has_logo,omitempty"`
	// Color distintivo de la marca en representación Hexadecimal RGB de 6 caracteres.
	Color *string `json:"color,omitempty"`
	// Número de folio que se asignará a la siguiente factura en ambiente Live (y que se incrementará automáticamente por cada nueva factura).
	NextFolioNumber *int32 `json:"next_folio_number,omitempty"`
	// Número de folio que se asignará a la siguiente factura en ambiente Test (y que se incrementará automáticamente por cada nueva factura).
	NextFolioNumberTest *int32 `json:"next_folio_number_test,omitempty"`
	PdfExtra *OrganizationCustomizationPdfExtra `json:"pdf_extra,omitempty"`
}

// NewOrganizationCustomization instantiates a new OrganizationCustomization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCustomization() *OrganizationCustomization {
	this := OrganizationCustomization{}
	return &this
}

// NewOrganizationCustomizationWithDefaults instantiates a new OrganizationCustomization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCustomizationWithDefaults() *OrganizationCustomization {
	this := OrganizationCustomization{}
	return &this
}

// GetHasLogo returns the HasLogo field value if set, zero value otherwise.
func (o *OrganizationCustomization) GetHasLogo() bool {
	if o == nil || IsNil(o.HasLogo) {
		var ret bool
		return ret
	}
	return *o.HasLogo
}

// GetHasLogoOk returns a tuple with the HasLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomization) GetHasLogoOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLogo) {
		return nil, false
	}
	return o.HasLogo, true
}

// HasHasLogo returns a boolean if a field has been set.
func (o *OrganizationCustomization) HasHasLogo() bool {
	if o != nil && !IsNil(o.HasLogo) {
		return true
	}

	return false
}

// SetHasLogo gets a reference to the given bool and assigns it to the HasLogo field.
func (o *OrganizationCustomization) SetHasLogo(v bool) {
	o.HasLogo = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *OrganizationCustomization) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomization) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *OrganizationCustomization) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *OrganizationCustomization) SetColor(v string) {
	o.Color = &v
}

// GetNextFolioNumber returns the NextFolioNumber field value if set, zero value otherwise.
func (o *OrganizationCustomization) GetNextFolioNumber() int32 {
	if o == nil || IsNil(o.NextFolioNumber) {
		var ret int32
		return ret
	}
	return *o.NextFolioNumber
}

// GetNextFolioNumberOk returns a tuple with the NextFolioNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomization) GetNextFolioNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.NextFolioNumber) {
		return nil, false
	}
	return o.NextFolioNumber, true
}

// HasNextFolioNumber returns a boolean if a field has been set.
func (o *OrganizationCustomization) HasNextFolioNumber() bool {
	if o != nil && !IsNil(o.NextFolioNumber) {
		return true
	}

	return false
}

// SetNextFolioNumber gets a reference to the given int32 and assigns it to the NextFolioNumber field.
func (o *OrganizationCustomization) SetNextFolioNumber(v int32) {
	o.NextFolioNumber = &v
}

// GetNextFolioNumberTest returns the NextFolioNumberTest field value if set, zero value otherwise.
func (o *OrganizationCustomization) GetNextFolioNumberTest() int32 {
	if o == nil || IsNil(o.NextFolioNumberTest) {
		var ret int32
		return ret
	}
	return *o.NextFolioNumberTest
}

// GetNextFolioNumberTestOk returns a tuple with the NextFolioNumberTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomization) GetNextFolioNumberTestOk() (*int32, bool) {
	if o == nil || IsNil(o.NextFolioNumberTest) {
		return nil, false
	}
	return o.NextFolioNumberTest, true
}

// HasNextFolioNumberTest returns a boolean if a field has been set.
func (o *OrganizationCustomization) HasNextFolioNumberTest() bool {
	if o != nil && !IsNil(o.NextFolioNumberTest) {
		return true
	}

	return false
}

// SetNextFolioNumberTest gets a reference to the given int32 and assigns it to the NextFolioNumberTest field.
func (o *OrganizationCustomization) SetNextFolioNumberTest(v int32) {
	o.NextFolioNumberTest = &v
}

// GetPdfExtra returns the PdfExtra field value if set, zero value otherwise.
func (o *OrganizationCustomization) GetPdfExtra() OrganizationCustomizationPdfExtra {
	if o == nil || IsNil(o.PdfExtra) {
		var ret OrganizationCustomizationPdfExtra
		return ret
	}
	return *o.PdfExtra
}

// GetPdfExtraOk returns a tuple with the PdfExtra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomization) GetPdfExtraOk() (*OrganizationCustomizationPdfExtra, bool) {
	if o == nil || IsNil(o.PdfExtra) {
		return nil, false
	}
	return o.PdfExtra, true
}

// HasPdfExtra returns a boolean if a field has been set.
func (o *OrganizationCustomization) HasPdfExtra() bool {
	if o != nil && !IsNil(o.PdfExtra) {
		return true
	}

	return false
}

// SetPdfExtra gets a reference to the given OrganizationCustomizationPdfExtra and assigns it to the PdfExtra field.
func (o *OrganizationCustomization) SetPdfExtra(v OrganizationCustomizationPdfExtra) {
	o.PdfExtra = &v
}

func (o OrganizationCustomization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationCustomization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HasLogo) {
		toSerialize["has_logo"] = o.HasLogo
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.NextFolioNumber) {
		toSerialize["next_folio_number"] = o.NextFolioNumber
	}
	if !IsNil(o.NextFolioNumberTest) {
		toSerialize["next_folio_number_test"] = o.NextFolioNumberTest
	}
	if !IsNil(o.PdfExtra) {
		toSerialize["pdf_extra"] = o.PdfExtra
	}
	return toSerialize, nil
}

type NullableOrganizationCustomization struct {
	value *OrganizationCustomization
	isSet bool
}

func (v NullableOrganizationCustomization) Get() *OrganizationCustomization {
	return v.value
}

func (v *NullableOrganizationCustomization) Set(val *OrganizationCustomization) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCustomization) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCustomization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCustomization(val *OrganizationCustomization) *NullableOrganizationCustomization {
	return &NullableOrganizationCustomization{value: val, isSet: true}
}

func (v NullableOrganizationCustomization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCustomization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


