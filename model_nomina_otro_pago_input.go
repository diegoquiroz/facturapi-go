/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NominaOtroPagoInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NominaOtroPagoInput{}

// NominaOtroPagoInput struct for NominaOtroPagoInput
type NominaOtroPagoInput struct {
	// Clave del catálogo [Tipo de Otro Pago](#tipo-de-otro-pago).
	TipoOtroPago string `json:"tipo_otro_pago"`
	// Clave de otro pago de nómina propia de la contabilidad de cada patrón.
	Clave string `json:"clave"`
	// Descripción alternativa correspondiente a la clave utilizada.
	Concepto *string `json:"concepto,omitempty"`
	// Importe por concepto de otro pago.
	Importe float32 `json:"importe"`
	// Subsudio causado conforme a la tabla del subsidio para el empleo publicada en el Anexo 8 de la Resolución Miscelánea Fiscal vigente.  Este valor será insertado dentro del nodo `SubsidioAlEmpleo`, y es requerido cuando el valor de `tipo_otro_pago` es `\"002\"`. 
	SubsidioCausado *float32 `json:"subsidio_causado,omitempty"`
	CompensacionSaldosAFavor *NominaCompensacionInput `json:"compensacion_saldos_a_favor,omitempty"`
}

// NewNominaOtroPagoInput instantiates a new NominaOtroPagoInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNominaOtroPagoInput(tipoOtroPago string, clave string, importe float32) *NominaOtroPagoInput {
	this := NominaOtroPagoInput{}
	this.TipoOtroPago = tipoOtroPago
	this.Clave = clave
	this.Importe = importe
	return &this
}

// NewNominaOtroPagoInputWithDefaults instantiates a new NominaOtroPagoInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNominaOtroPagoInputWithDefaults() *NominaOtroPagoInput {
	this := NominaOtroPagoInput{}
	return &this
}

// GetTipoOtroPago returns the TipoOtroPago field value
func (o *NominaOtroPagoInput) GetTipoOtroPago() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TipoOtroPago
}

// GetTipoOtroPagoOk returns a tuple with the TipoOtroPago field value
// and a boolean to check if the value has been set.
func (o *NominaOtroPagoInput) GetTipoOtroPagoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TipoOtroPago, true
}

// SetTipoOtroPago sets field value
func (o *NominaOtroPagoInput) SetTipoOtroPago(v string) {
	o.TipoOtroPago = v
}

// GetClave returns the Clave field value
func (o *NominaOtroPagoInput) GetClave() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Clave
}

// GetClaveOk returns a tuple with the Clave field value
// and a boolean to check if the value has been set.
func (o *NominaOtroPagoInput) GetClaveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Clave, true
}

// SetClave sets field value
func (o *NominaOtroPagoInput) SetClave(v string) {
	o.Clave = v
}

// GetConcepto returns the Concepto field value if set, zero value otherwise.
func (o *NominaOtroPagoInput) GetConcepto() string {
	if o == nil || IsNil(o.Concepto) {
		var ret string
		return ret
	}
	return *o.Concepto
}

// GetConceptoOk returns a tuple with the Concepto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaOtroPagoInput) GetConceptoOk() (*string, bool) {
	if o == nil || IsNil(o.Concepto) {
		return nil, false
	}
	return o.Concepto, true
}

// HasConcepto returns a boolean if a field has been set.
func (o *NominaOtroPagoInput) HasConcepto() bool {
	if o != nil && !IsNil(o.Concepto) {
		return true
	}

	return false
}

// SetConcepto gets a reference to the given string and assigns it to the Concepto field.
func (o *NominaOtroPagoInput) SetConcepto(v string) {
	o.Concepto = &v
}

// GetImporte returns the Importe field value
func (o *NominaOtroPagoInput) GetImporte() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Importe
}

// GetImporteOk returns a tuple with the Importe field value
// and a boolean to check if the value has been set.
func (o *NominaOtroPagoInput) GetImporteOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Importe, true
}

// SetImporte sets field value
func (o *NominaOtroPagoInput) SetImporte(v float32) {
	o.Importe = v
}

// GetSubsidioCausado returns the SubsidioCausado field value if set, zero value otherwise.
func (o *NominaOtroPagoInput) GetSubsidioCausado() float32 {
	if o == nil || IsNil(o.SubsidioCausado) {
		var ret float32
		return ret
	}
	return *o.SubsidioCausado
}

// GetSubsidioCausadoOk returns a tuple with the SubsidioCausado field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaOtroPagoInput) GetSubsidioCausadoOk() (*float32, bool) {
	if o == nil || IsNil(o.SubsidioCausado) {
		return nil, false
	}
	return o.SubsidioCausado, true
}

// HasSubsidioCausado returns a boolean if a field has been set.
func (o *NominaOtroPagoInput) HasSubsidioCausado() bool {
	if o != nil && !IsNil(o.SubsidioCausado) {
		return true
	}

	return false
}

// SetSubsidioCausado gets a reference to the given float32 and assigns it to the SubsidioCausado field.
func (o *NominaOtroPagoInput) SetSubsidioCausado(v float32) {
	o.SubsidioCausado = &v
}

// GetCompensacionSaldosAFavor returns the CompensacionSaldosAFavor field value if set, zero value otherwise.
func (o *NominaOtroPagoInput) GetCompensacionSaldosAFavor() NominaCompensacionInput {
	if o == nil || IsNil(o.CompensacionSaldosAFavor) {
		var ret NominaCompensacionInput
		return ret
	}
	return *o.CompensacionSaldosAFavor
}

// GetCompensacionSaldosAFavorOk returns a tuple with the CompensacionSaldosAFavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaOtroPagoInput) GetCompensacionSaldosAFavorOk() (*NominaCompensacionInput, bool) {
	if o == nil || IsNil(o.CompensacionSaldosAFavor) {
		return nil, false
	}
	return o.CompensacionSaldosAFavor, true
}

// HasCompensacionSaldosAFavor returns a boolean if a field has been set.
func (o *NominaOtroPagoInput) HasCompensacionSaldosAFavor() bool {
	if o != nil && !IsNil(o.CompensacionSaldosAFavor) {
		return true
	}

	return false
}

// SetCompensacionSaldosAFavor gets a reference to the given NominaCompensacionInput and assigns it to the CompensacionSaldosAFavor field.
func (o *NominaOtroPagoInput) SetCompensacionSaldosAFavor(v NominaCompensacionInput) {
	o.CompensacionSaldosAFavor = &v
}

func (o NominaOtroPagoInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NominaOtroPagoInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tipo_otro_pago"] = o.TipoOtroPago
	toSerialize["clave"] = o.Clave
	if !IsNil(o.Concepto) {
		toSerialize["concepto"] = o.Concepto
	}
	toSerialize["importe"] = o.Importe
	if !IsNil(o.SubsidioCausado) {
		toSerialize["subsidio_causado"] = o.SubsidioCausado
	}
	if !IsNil(o.CompensacionSaldosAFavor) {
		toSerialize["compensacion_saldos_a_favor"] = o.CompensacionSaldosAFavor
	}
	return toSerialize, nil
}

type NullableNominaOtroPagoInput struct {
	value *NominaOtroPagoInput
	isSet bool
}

func (v NullableNominaOtroPagoInput) Get() *NominaOtroPagoInput {
	return v.value
}

func (v *NullableNominaOtroPagoInput) Set(val *NominaOtroPagoInput) {
	v.value = val
	v.isSet = true
}

func (v NullableNominaOtroPagoInput) IsSet() bool {
	return v.isSet
}

func (v *NullableNominaOtroPagoInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNominaOtroPagoInput(val *NominaOtroPagoInput) *NullableNominaOtroPagoInput {
	return &NullableNominaOtroPagoInput{value: val, isSet: true}
}

func (v NullableNominaOtroPagoInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNominaOtroPagoInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


