/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi

import (
	"encoding/json"
)

// checks if the NominaComplementDataInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NominaComplementDataInput{}

// NominaComplementDataInput Objeto con la información del complemento de nómina.
type NominaComplementDataInput struct {
	// Tipo de nómina. - `“O”` (Ordinaria): Cuando corresponde a un pago que se realiza de manera habitual, como sueldos. - `“E”` (Extraordinaria): Para pagos fuera de lo habitual, como liquidaciones, aguinaldos o bonos. 
	TipoNomina *string `json:"tipo_nomina,omitempty"`
	// Fecha de pago de la nómina al trabajador.
	FechaPago *string `json:"fecha_pago,omitempty"`
	// Fecha inicial del periodo de pago.
	FechaInicialPago string `json:"fecha_inicial_pago"`
	// Fecha final del periodo de pago.
	FechaFinalPago string `json:"fecha_final_pago"`
	// Número de días pagados. Puede ser entero o fracción.
	NumDiasPagados float32 `json:"num_dias_pagados"`
	Emisor *NominaEmisorProperties `json:"emisor,omitempty"`
	Receptor NominaReceptorInput `json:"receptor"`
	Percepciones NominaPercepcionesInput `json:"percepciones"`
	Deducciones []NominaDeduccionInput `json:"deducciones,omitempty"`
	OtrosPagos []OtroPago `json:"otros_pagos,omitempty"`
	Incapacidades []NominaIncapacidadInput `json:"incapacidades,omitempty"`
}

// NewNominaComplementDataInput instantiates a new NominaComplementDataInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNominaComplementDataInput(fechaInicialPago string, fechaFinalPago string, numDiasPagados float32, receptor NominaReceptorInput, percepciones NominaPercepcionesInput) *NominaComplementDataInput {
	this := NominaComplementDataInput{}
	var tipoNomina string = "O"
	this.TipoNomina = &tipoNomina
	var fechaPago string = "now"
	this.FechaPago = &fechaPago
	this.FechaInicialPago = fechaInicialPago
	this.FechaFinalPago = fechaFinalPago
	this.NumDiasPagados = numDiasPagados
	this.Receptor = receptor
	this.Percepciones = percepciones
	return &this
}

// NewNominaComplementDataInputWithDefaults instantiates a new NominaComplementDataInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNominaComplementDataInputWithDefaults() *NominaComplementDataInput {
	this := NominaComplementDataInput{}
	var tipoNomina string = "O"
	this.TipoNomina = &tipoNomina
	var fechaPago string = "now"
	this.FechaPago = &fechaPago
	return &this
}

// GetTipoNomina returns the TipoNomina field value if set, zero value otherwise.
func (o *NominaComplementDataInput) GetTipoNomina() string {
	if o == nil || IsNil(o.TipoNomina) {
		var ret string
		return ret
	}
	return *o.TipoNomina
}

// GetTipoNominaOk returns a tuple with the TipoNomina field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetTipoNominaOk() (*string, bool) {
	if o == nil || IsNil(o.TipoNomina) {
		return nil, false
	}
	return o.TipoNomina, true
}

// HasTipoNomina returns a boolean if a field has been set.
func (o *NominaComplementDataInput) HasTipoNomina() bool {
	if o != nil && !IsNil(o.TipoNomina) {
		return true
	}

	return false
}

// SetTipoNomina gets a reference to the given string and assigns it to the TipoNomina field.
func (o *NominaComplementDataInput) SetTipoNomina(v string) {
	o.TipoNomina = &v
}

// GetFechaPago returns the FechaPago field value if set, zero value otherwise.
func (o *NominaComplementDataInput) GetFechaPago() string {
	if o == nil || IsNil(o.FechaPago) {
		var ret string
		return ret
	}
	return *o.FechaPago
}

// GetFechaPagoOk returns a tuple with the FechaPago field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetFechaPagoOk() (*string, bool) {
	if o == nil || IsNil(o.FechaPago) {
		return nil, false
	}
	return o.FechaPago, true
}

// HasFechaPago returns a boolean if a field has been set.
func (o *NominaComplementDataInput) HasFechaPago() bool {
	if o != nil && !IsNil(o.FechaPago) {
		return true
	}

	return false
}

// SetFechaPago gets a reference to the given string and assigns it to the FechaPago field.
func (o *NominaComplementDataInput) SetFechaPago(v string) {
	o.FechaPago = &v
}

// GetFechaInicialPago returns the FechaInicialPago field value
func (o *NominaComplementDataInput) GetFechaInicialPago() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FechaInicialPago
}

// GetFechaInicialPagoOk returns a tuple with the FechaInicialPago field value
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetFechaInicialPagoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FechaInicialPago, true
}

// SetFechaInicialPago sets field value
func (o *NominaComplementDataInput) SetFechaInicialPago(v string) {
	o.FechaInicialPago = v
}

// GetFechaFinalPago returns the FechaFinalPago field value
func (o *NominaComplementDataInput) GetFechaFinalPago() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FechaFinalPago
}

// GetFechaFinalPagoOk returns a tuple with the FechaFinalPago field value
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetFechaFinalPagoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FechaFinalPago, true
}

// SetFechaFinalPago sets field value
func (o *NominaComplementDataInput) SetFechaFinalPago(v string) {
	o.FechaFinalPago = v
}

// GetNumDiasPagados returns the NumDiasPagados field value
func (o *NominaComplementDataInput) GetNumDiasPagados() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NumDiasPagados
}

// GetNumDiasPagadosOk returns a tuple with the NumDiasPagados field value
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetNumDiasPagadosOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumDiasPagados, true
}

// SetNumDiasPagados sets field value
func (o *NominaComplementDataInput) SetNumDiasPagados(v float32) {
	o.NumDiasPagados = v
}

// GetEmisor returns the Emisor field value if set, zero value otherwise.
func (o *NominaComplementDataInput) GetEmisor() NominaEmisorProperties {
	if o == nil || IsNil(o.Emisor) {
		var ret NominaEmisorProperties
		return ret
	}
	return *o.Emisor
}

// GetEmisorOk returns a tuple with the Emisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetEmisorOk() (*NominaEmisorProperties, bool) {
	if o == nil || IsNil(o.Emisor) {
		return nil, false
	}
	return o.Emisor, true
}

// HasEmisor returns a boolean if a field has been set.
func (o *NominaComplementDataInput) HasEmisor() bool {
	if o != nil && !IsNil(o.Emisor) {
		return true
	}

	return false
}

// SetEmisor gets a reference to the given NominaEmisorProperties and assigns it to the Emisor field.
func (o *NominaComplementDataInput) SetEmisor(v NominaEmisorProperties) {
	o.Emisor = &v
}

// GetReceptor returns the Receptor field value
func (o *NominaComplementDataInput) GetReceptor() NominaReceptorInput {
	if o == nil {
		var ret NominaReceptorInput
		return ret
	}

	return o.Receptor
}

// GetReceptorOk returns a tuple with the Receptor field value
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetReceptorOk() (*NominaReceptorInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Receptor, true
}

// SetReceptor sets field value
func (o *NominaComplementDataInput) SetReceptor(v NominaReceptorInput) {
	o.Receptor = v
}

// GetPercepciones returns the Percepciones field value
func (o *NominaComplementDataInput) GetPercepciones() NominaPercepcionesInput {
	if o == nil {
		var ret NominaPercepcionesInput
		return ret
	}

	return o.Percepciones
}

// GetPercepcionesOk returns a tuple with the Percepciones field value
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetPercepcionesOk() (*NominaPercepcionesInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Percepciones, true
}

// SetPercepciones sets field value
func (o *NominaComplementDataInput) SetPercepciones(v NominaPercepcionesInput) {
	o.Percepciones = v
}

// GetDeducciones returns the Deducciones field value if set, zero value otherwise.
func (o *NominaComplementDataInput) GetDeducciones() []NominaDeduccionInput {
	if o == nil || IsNil(o.Deducciones) {
		var ret []NominaDeduccionInput
		return ret
	}
	return o.Deducciones
}

// GetDeduccionesOk returns a tuple with the Deducciones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetDeduccionesOk() ([]NominaDeduccionInput, bool) {
	if o == nil || IsNil(o.Deducciones) {
		return nil, false
	}
	return o.Deducciones, true
}

// HasDeducciones returns a boolean if a field has been set.
func (o *NominaComplementDataInput) HasDeducciones() bool {
	if o != nil && !IsNil(o.Deducciones) {
		return true
	}

	return false
}

// SetDeducciones gets a reference to the given []NominaDeduccionInput and assigns it to the Deducciones field.
func (o *NominaComplementDataInput) SetDeducciones(v []NominaDeduccionInput) {
	o.Deducciones = v
}

// GetOtrosPagos returns the OtrosPagos field value if set, zero value otherwise.
func (o *NominaComplementDataInput) GetOtrosPagos() []OtroPago {
	if o == nil || IsNil(o.OtrosPagos) {
		var ret []OtroPago
		return ret
	}
	return o.OtrosPagos
}

// GetOtrosPagosOk returns a tuple with the OtrosPagos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetOtrosPagosOk() ([]OtroPago, bool) {
	if o == nil || IsNil(o.OtrosPagos) {
		return nil, false
	}
	return o.OtrosPagos, true
}

// HasOtrosPagos returns a boolean if a field has been set.
func (o *NominaComplementDataInput) HasOtrosPagos() bool {
	if o != nil && !IsNil(o.OtrosPagos) {
		return true
	}

	return false
}

// SetOtrosPagos gets a reference to the given []OtroPago and assigns it to the OtrosPagos field.
func (o *NominaComplementDataInput) SetOtrosPagos(v []OtroPago) {
	o.OtrosPagos = v
}

// GetIncapacidades returns the Incapacidades field value if set, zero value otherwise.
func (o *NominaComplementDataInput) GetIncapacidades() []NominaIncapacidadInput {
	if o == nil || IsNil(o.Incapacidades) {
		var ret []NominaIncapacidadInput
		return ret
	}
	return o.Incapacidades
}

// GetIncapacidadesOk returns a tuple with the Incapacidades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataInput) GetIncapacidadesOk() ([]NominaIncapacidadInput, bool) {
	if o == nil || IsNil(o.Incapacidades) {
		return nil, false
	}
	return o.Incapacidades, true
}

// HasIncapacidades returns a boolean if a field has been set.
func (o *NominaComplementDataInput) HasIncapacidades() bool {
	if o != nil && !IsNil(o.Incapacidades) {
		return true
	}

	return false
}

// SetIncapacidades gets a reference to the given []NominaIncapacidadInput and assigns it to the Incapacidades field.
func (o *NominaComplementDataInput) SetIncapacidades(v []NominaIncapacidadInput) {
	o.Incapacidades = v
}

func (o NominaComplementDataInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NominaComplementDataInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TipoNomina) {
		toSerialize["tipo_nomina"] = o.TipoNomina
	}
	if !IsNil(o.FechaPago) {
		toSerialize["fecha_pago"] = o.FechaPago
	}
	toSerialize["fecha_inicial_pago"] = o.FechaInicialPago
	toSerialize["fecha_final_pago"] = o.FechaFinalPago
	toSerialize["num_dias_pagados"] = o.NumDiasPagados
	if !IsNil(o.Emisor) {
		toSerialize["emisor"] = o.Emisor
	}
	toSerialize["receptor"] = o.Receptor
	toSerialize["percepciones"] = o.Percepciones
	if !IsNil(o.Deducciones) {
		toSerialize["deducciones"] = o.Deducciones
	}
	if !IsNil(o.OtrosPagos) {
		toSerialize["otros_pagos"] = o.OtrosPagos
	}
	if !IsNil(o.Incapacidades) {
		toSerialize["incapacidades"] = o.Incapacidades
	}
	return toSerialize, nil
}

type NullableNominaComplementDataInput struct {
	value *NominaComplementDataInput
	isSet bool
}

func (v NullableNominaComplementDataInput) Get() *NominaComplementDataInput {
	return v.value
}

func (v *NullableNominaComplementDataInput) Set(val *NominaComplementDataInput) {
	v.value = val
	v.isSet = true
}

func (v NullableNominaComplementDataInput) IsSet() bool {
	return v.isSet
}

func (v *NullableNominaComplementDataInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNominaComplementDataInput(val *NominaComplementDataInput) *NullableNominaComplementDataInput {
	return &NullableNominaComplementDataInput{value: val, isSet: true}
}

func (v NullableNominaComplementDataInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNominaComplementDataInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


