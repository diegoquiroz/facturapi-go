/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi

import (
	"encoding/json"
)

// checks if the LineItemInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LineItemInput{}

// LineItemInput Conceptos incluidos en el documento
type LineItemInput struct {
	// Cantidad de unidades incluídas del mismo concepto.
	Quantity *float32 `json:"quantity,omitempty"`
	// Monto total de descuento aplicado a este concepto.
	Discount *float32 `json:"discount,omitempty"`
	Product LineItemInputProduct `json:"product"`
	Parts []PartInput `json:"parts,omitempty"`
	CustomsKeys []string `json:"customs_keys,omitempty"`
	// Código XML de tu complemento.
	Complement *string `json:"complement,omitempty"`
	ThirdParty *LineItemInputThirdParty `json:"third_party,omitempty"`
	// Número de cuenta para el impuesto predial.
	PropertyTaxAccount *string `json:"property_tax_account,omitempty"`
}

// NewLineItemInput instantiates a new LineItemInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineItemInput(product LineItemInputProduct) *LineItemInput {
	this := LineItemInput{}
	var quantity float32 = 1
	this.Quantity = &quantity
	var discount float32 = 0
	this.Discount = &discount
	this.Product = product
	return &this
}

// NewLineItemInputWithDefaults instantiates a new LineItemInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineItemInputWithDefaults() *LineItemInput {
	this := LineItemInput{}
	var quantity float32 = 1
	this.Quantity = &quantity
	var discount float32 = 0
	this.Discount = &discount
	return &this
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *LineItemInput) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemInput) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *LineItemInput) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *LineItemInput) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *LineItemInput) GetDiscount() float32 {
	if o == nil || IsNil(o.Discount) {
		var ret float32
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemInput) GetDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *LineItemInput) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float32 and assigns it to the Discount field.
func (o *LineItemInput) SetDiscount(v float32) {
	o.Discount = &v
}

// GetProduct returns the Product field value
func (o *LineItemInput) GetProduct() LineItemInputProduct {
	if o == nil {
		var ret LineItemInputProduct
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *LineItemInput) GetProductOk() (*LineItemInputProduct, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *LineItemInput) SetProduct(v LineItemInputProduct) {
	o.Product = v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *LineItemInput) GetParts() []PartInput {
	if o == nil || IsNil(o.Parts) {
		var ret []PartInput
		return ret
	}
	return o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemInput) GetPartsOk() ([]PartInput, bool) {
	if o == nil || IsNil(o.Parts) {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *LineItemInput) HasParts() bool {
	if o != nil && !IsNil(o.Parts) {
		return true
	}

	return false
}

// SetParts gets a reference to the given []PartInput and assigns it to the Parts field.
func (o *LineItemInput) SetParts(v []PartInput) {
	o.Parts = v
}

// GetCustomsKeys returns the CustomsKeys field value if set, zero value otherwise.
func (o *LineItemInput) GetCustomsKeys() []string {
	if o == nil || IsNil(o.CustomsKeys) {
		var ret []string
		return ret
	}
	return o.CustomsKeys
}

// GetCustomsKeysOk returns a tuple with the CustomsKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemInput) GetCustomsKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomsKeys) {
		return nil, false
	}
	return o.CustomsKeys, true
}

// HasCustomsKeys returns a boolean if a field has been set.
func (o *LineItemInput) HasCustomsKeys() bool {
	if o != nil && !IsNil(o.CustomsKeys) {
		return true
	}

	return false
}

// SetCustomsKeys gets a reference to the given []string and assigns it to the CustomsKeys field.
func (o *LineItemInput) SetCustomsKeys(v []string) {
	o.CustomsKeys = v
}

// GetComplement returns the Complement field value if set, zero value otherwise.
func (o *LineItemInput) GetComplement() string {
	if o == nil || IsNil(o.Complement) {
		var ret string
		return ret
	}
	return *o.Complement
}

// GetComplementOk returns a tuple with the Complement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemInput) GetComplementOk() (*string, bool) {
	if o == nil || IsNil(o.Complement) {
		return nil, false
	}
	return o.Complement, true
}

// HasComplement returns a boolean if a field has been set.
func (o *LineItemInput) HasComplement() bool {
	if o != nil && !IsNil(o.Complement) {
		return true
	}

	return false
}

// SetComplement gets a reference to the given string and assigns it to the Complement field.
func (o *LineItemInput) SetComplement(v string) {
	o.Complement = &v
}

// GetThirdParty returns the ThirdParty field value if set, zero value otherwise.
func (o *LineItemInput) GetThirdParty() LineItemInputThirdParty {
	if o == nil || IsNil(o.ThirdParty) {
		var ret LineItemInputThirdParty
		return ret
	}
	return *o.ThirdParty
}

// GetThirdPartyOk returns a tuple with the ThirdParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemInput) GetThirdPartyOk() (*LineItemInputThirdParty, bool) {
	if o == nil || IsNil(o.ThirdParty) {
		return nil, false
	}
	return o.ThirdParty, true
}

// HasThirdParty returns a boolean if a field has been set.
func (o *LineItemInput) HasThirdParty() bool {
	if o != nil && !IsNil(o.ThirdParty) {
		return true
	}

	return false
}

// SetThirdParty gets a reference to the given LineItemInputThirdParty and assigns it to the ThirdParty field.
func (o *LineItemInput) SetThirdParty(v LineItemInputThirdParty) {
	o.ThirdParty = &v
}

// GetPropertyTaxAccount returns the PropertyTaxAccount field value if set, zero value otherwise.
func (o *LineItemInput) GetPropertyTaxAccount() string {
	if o == nil || IsNil(o.PropertyTaxAccount) {
		var ret string
		return ret
	}
	return *o.PropertyTaxAccount
}

// GetPropertyTaxAccountOk returns a tuple with the PropertyTaxAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemInput) GetPropertyTaxAccountOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyTaxAccount) {
		return nil, false
	}
	return o.PropertyTaxAccount, true
}

// HasPropertyTaxAccount returns a boolean if a field has been set.
func (o *LineItemInput) HasPropertyTaxAccount() bool {
	if o != nil && !IsNil(o.PropertyTaxAccount) {
		return true
	}

	return false
}

// SetPropertyTaxAccount gets a reference to the given string and assigns it to the PropertyTaxAccount field.
func (o *LineItemInput) SetPropertyTaxAccount(v string) {
	o.PropertyTaxAccount = &v
}

func (o LineItemInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LineItemInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	toSerialize["product"] = o.Product
	if !IsNil(o.Parts) {
		toSerialize["parts"] = o.Parts
	}
	if !IsNil(o.CustomsKeys) {
		toSerialize["customs_keys"] = o.CustomsKeys
	}
	if !IsNil(o.Complement) {
		toSerialize["complement"] = o.Complement
	}
	if !IsNil(o.ThirdParty) {
		toSerialize["third_party"] = o.ThirdParty
	}
	if !IsNil(o.PropertyTaxAccount) {
		toSerialize["property_tax_account"] = o.PropertyTaxAccount
	}
	return toSerialize, nil
}

type NullableLineItemInput struct {
	value *LineItemInput
	isSet bool
}

func (v NullableLineItemInput) Get() *LineItemInput {
	return v.value
}

func (v *NullableLineItemInput) Set(val *LineItemInput) {
	v.value = val
	v.isSet = true
}

func (v NullableLineItemInput) IsSet() bool {
	return v.isSet
}

func (v *NullableLineItemInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineItemInput(val *LineItemInput) *NullableLineItemInput {
	return &NullableLineItemInput{value: val, isSet: true}
}

func (v NullableLineItemInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineItemInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


