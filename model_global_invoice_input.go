/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GlobalInvoiceInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalInvoiceInput{}

// GlobalInvoiceInput struct for GlobalInvoiceInput
type GlobalInvoiceInput struct {
	// Fecha inicial de los recibos que se incluirán en la factura global. Por default, este valor es el inicio del último periodo (día, semana, quincena o mes), según el valor de \"Periodicidad\" (`periodicity`) en la configuración de recibos de tu organización. 
	From *string `json:"from,omitempty"`
	// Fecha final de los recibos que se incluirán en la factura global. Por default, este valor es el fin del último periodo (día, semana, quincena o mes), según el valor de \"Periodicidad\" (`periodicity`) en la configuración de recibos de tu organización. 
	To *string `json:"to,omitempty"`
	// Periodicidad que corresponde al rango de fechas utilizado. Si se omite, se tomará la configuración de recibos de la organización. 
	Periodicity string `json:"periodicity"`
	// Clave que representa el mes o bimestre de la factura. Consulta los posibles valores en el [catálogo de Meses y Bimestres](#meses-y-bimestres). 
	Months *string `json:"months,omitempty"`
	// Número de folio asignado por la empresa para control interno. Si se omite, se asignará el valor autoincremental de la organización. 
	FolioNumber *int32 `json:"folio_number,omitempty"`
	// Serie. Caracteres designados por la empresa para control interno y sin validez fiscal.
	Series *string `json:"series,omitempty"`
	// Fecha de emisión de la factura. 
	Date *string `json:"date,omitempty"`
	// description: Código que representa la forma de pago, de acuerdo al [catálogo del SAT](#forma-de-pago). Si se incluye, los recibos se agruparán y se crearán la factura global por la forma de pago. 
	PaymentForm *string `json:"payment_form,omitempty"`
}

// NewGlobalInvoiceInput instantiates a new GlobalInvoiceInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalInvoiceInput(periodicity string) *GlobalInvoiceInput {
	this := GlobalInvoiceInput{}
	var from string = "Inicio del último periodo"
	this.From = &from
	var to string = "Fin del último periodo"
	this.To = &to
	this.Periodicity = periodicity
	var months string = "Mes contenido en el rango de fechas utilizado."
	this.Months = &months
	var folioNumber int32 = autoincremental
	this.FolioNumber = &folioNumber
	var date string = "Valor del atributo `to`"
	this.Date = &date
	return &this
}

// NewGlobalInvoiceInputWithDefaults instantiates a new GlobalInvoiceInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalInvoiceInputWithDefaults() *GlobalInvoiceInput {
	this := GlobalInvoiceInput{}
	var from string = "Inicio del último periodo"
	this.From = &from
	var to string = "Fin del último periodo"
	this.To = &to
	var periodicity string = "Propiedad `periodicity` de la configuración de recibos de la organización."
	this.Periodicity = periodicity
	var months string = "Mes contenido en el rango de fechas utilizado."
	this.Months = &months
	var folioNumber int32 = autoincremental
	this.FolioNumber = &folioNumber
	var date string = "Valor del atributo `to`"
	this.Date = &date
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *GlobalInvoiceInput) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalInvoiceInput) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *GlobalInvoiceInput) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *GlobalInvoiceInput) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *GlobalInvoiceInput) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalInvoiceInput) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *GlobalInvoiceInput) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *GlobalInvoiceInput) SetTo(v string) {
	o.To = &v
}

// GetPeriodicity returns the Periodicity field value
func (o *GlobalInvoiceInput) GetPeriodicity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Periodicity
}

// GetPeriodicityOk returns a tuple with the Periodicity field value
// and a boolean to check if the value has been set.
func (o *GlobalInvoiceInput) GetPeriodicityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Periodicity, true
}

// SetPeriodicity sets field value
func (o *GlobalInvoiceInput) SetPeriodicity(v string) {
	o.Periodicity = v
}

// GetMonths returns the Months field value if set, zero value otherwise.
func (o *GlobalInvoiceInput) GetMonths() string {
	if o == nil || IsNil(o.Months) {
		var ret string
		return ret
	}
	return *o.Months
}

// GetMonthsOk returns a tuple with the Months field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalInvoiceInput) GetMonthsOk() (*string, bool) {
	if o == nil || IsNil(o.Months) {
		return nil, false
	}
	return o.Months, true
}

// HasMonths returns a boolean if a field has been set.
func (o *GlobalInvoiceInput) HasMonths() bool {
	if o != nil && !IsNil(o.Months) {
		return true
	}

	return false
}

// SetMonths gets a reference to the given string and assigns it to the Months field.
func (o *GlobalInvoiceInput) SetMonths(v string) {
	o.Months = &v
}

// GetFolioNumber returns the FolioNumber field value if set, zero value otherwise.
func (o *GlobalInvoiceInput) GetFolioNumber() int32 {
	if o == nil || IsNil(o.FolioNumber) {
		var ret int32
		return ret
	}
	return *o.FolioNumber
}

// GetFolioNumberOk returns a tuple with the FolioNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalInvoiceInput) GetFolioNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.FolioNumber) {
		return nil, false
	}
	return o.FolioNumber, true
}

// HasFolioNumber returns a boolean if a field has been set.
func (o *GlobalInvoiceInput) HasFolioNumber() bool {
	if o != nil && !IsNil(o.FolioNumber) {
		return true
	}

	return false
}

// SetFolioNumber gets a reference to the given int32 and assigns it to the FolioNumber field.
func (o *GlobalInvoiceInput) SetFolioNumber(v int32) {
	o.FolioNumber = &v
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *GlobalInvoiceInput) GetSeries() string {
	if o == nil || IsNil(o.Series) {
		var ret string
		return ret
	}
	return *o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalInvoiceInput) GetSeriesOk() (*string, bool) {
	if o == nil || IsNil(o.Series) {
		return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *GlobalInvoiceInput) HasSeries() bool {
	if o != nil && !IsNil(o.Series) {
		return true
	}

	return false
}

// SetSeries gets a reference to the given string and assigns it to the Series field.
func (o *GlobalInvoiceInput) SetSeries(v string) {
	o.Series = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *GlobalInvoiceInput) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalInvoiceInput) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *GlobalInvoiceInput) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *GlobalInvoiceInput) SetDate(v string) {
	o.Date = &v
}

// GetPaymentForm returns the PaymentForm field value if set, zero value otherwise.
func (o *GlobalInvoiceInput) GetPaymentForm() string {
	if o == nil || IsNil(o.PaymentForm) {
		var ret string
		return ret
	}
	return *o.PaymentForm
}

// GetPaymentFormOk returns a tuple with the PaymentForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalInvoiceInput) GetPaymentFormOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentForm) {
		return nil, false
	}
	return o.PaymentForm, true
}

// HasPaymentForm returns a boolean if a field has been set.
func (o *GlobalInvoiceInput) HasPaymentForm() bool {
	if o != nil && !IsNil(o.PaymentForm) {
		return true
	}

	return false
}

// SetPaymentForm gets a reference to the given string and assigns it to the PaymentForm field.
func (o *GlobalInvoiceInput) SetPaymentForm(v string) {
	o.PaymentForm = &v
}

func (o GlobalInvoiceInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalInvoiceInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	toSerialize["periodicity"] = o.Periodicity
	if !IsNil(o.Months) {
		toSerialize["months"] = o.Months
	}
	if !IsNil(o.FolioNumber) {
		toSerialize["folio_number"] = o.FolioNumber
	}
	if !IsNil(o.Series) {
		toSerialize["series"] = o.Series
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.PaymentForm) {
		toSerialize["payment_form"] = o.PaymentForm
	}
	return toSerialize, nil
}

type NullableGlobalInvoiceInput struct {
	value *GlobalInvoiceInput
	isSet bool
}

func (v NullableGlobalInvoiceInput) Get() *GlobalInvoiceInput {
	return v.value
}

func (v *NullableGlobalInvoiceInput) Set(val *GlobalInvoiceInput) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalInvoiceInput) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalInvoiceInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalInvoiceInput(val *GlobalInvoiceInput) *NullableGlobalInvoiceInput {
	return &NullableGlobalInvoiceInput{value: val, isSet: true}
}

func (v NullableGlobalInvoiceInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalInvoiceInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


