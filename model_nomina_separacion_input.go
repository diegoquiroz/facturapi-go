/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi

import (
	"encoding/json"
)

// checks if the NominaSeparacionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NominaSeparacionInput{}

// NominaSeparacionInput struct for NominaSeparacionInput
type NominaSeparacionInput struct {
	// Monto total pagado por concepto de separación o indemnización.
	TotalPagado float32 `json:"total_pagado"`
	// Años de servicio que laboró el trabajador, redondeado al entero inmediato superior.
	NumAnosServicio int32 `json:"num_anos_servicio"`
	// Último sueldo mensual ordinario percibido por el trabajador.
	UltimoSueldoMensOrd float32 `json:"ultimo_sueldo_mens_ord"`
	// Monto por ingresos acumulables.
	IngresoAcumulable float32 `json:"ingreso_acumulable"`
	// Monto por ingresos no acumulables.
	IngresoNoAcumulable float32 `json:"ingreso_no_acumulable"`
}

// NewNominaSeparacionInput instantiates a new NominaSeparacionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNominaSeparacionInput(totalPagado float32, numAnosServicio int32, ultimoSueldoMensOrd float32, ingresoAcumulable float32, ingresoNoAcumulable float32) *NominaSeparacionInput {
	this := NominaSeparacionInput{}
	this.TotalPagado = totalPagado
	this.NumAnosServicio = numAnosServicio
	this.UltimoSueldoMensOrd = ultimoSueldoMensOrd
	this.IngresoAcumulable = ingresoAcumulable
	this.IngresoNoAcumulable = ingresoNoAcumulable
	return &this
}

// NewNominaSeparacionInputWithDefaults instantiates a new NominaSeparacionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNominaSeparacionInputWithDefaults() *NominaSeparacionInput {
	this := NominaSeparacionInput{}
	return &this
}

// GetTotalPagado returns the TotalPagado field value
func (o *NominaSeparacionInput) GetTotalPagado() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalPagado
}

// GetTotalPagadoOk returns a tuple with the TotalPagado field value
// and a boolean to check if the value has been set.
func (o *NominaSeparacionInput) GetTotalPagadoOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPagado, true
}

// SetTotalPagado sets field value
func (o *NominaSeparacionInput) SetTotalPagado(v float32) {
	o.TotalPagado = v
}

// GetNumAnosServicio returns the NumAnosServicio field value
func (o *NominaSeparacionInput) GetNumAnosServicio() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumAnosServicio
}

// GetNumAnosServicioOk returns a tuple with the NumAnosServicio field value
// and a boolean to check if the value has been set.
func (o *NominaSeparacionInput) GetNumAnosServicioOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumAnosServicio, true
}

// SetNumAnosServicio sets field value
func (o *NominaSeparacionInput) SetNumAnosServicio(v int32) {
	o.NumAnosServicio = v
}

// GetUltimoSueldoMensOrd returns the UltimoSueldoMensOrd field value
func (o *NominaSeparacionInput) GetUltimoSueldoMensOrd() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UltimoSueldoMensOrd
}

// GetUltimoSueldoMensOrdOk returns a tuple with the UltimoSueldoMensOrd field value
// and a boolean to check if the value has been set.
func (o *NominaSeparacionInput) GetUltimoSueldoMensOrdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UltimoSueldoMensOrd, true
}

// SetUltimoSueldoMensOrd sets field value
func (o *NominaSeparacionInput) SetUltimoSueldoMensOrd(v float32) {
	o.UltimoSueldoMensOrd = v
}

// GetIngresoAcumulable returns the IngresoAcumulable field value
func (o *NominaSeparacionInput) GetIngresoAcumulable() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IngresoAcumulable
}

// GetIngresoAcumulableOk returns a tuple with the IngresoAcumulable field value
// and a boolean to check if the value has been set.
func (o *NominaSeparacionInput) GetIngresoAcumulableOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IngresoAcumulable, true
}

// SetIngresoAcumulable sets field value
func (o *NominaSeparacionInput) SetIngresoAcumulable(v float32) {
	o.IngresoAcumulable = v
}

// GetIngresoNoAcumulable returns the IngresoNoAcumulable field value
func (o *NominaSeparacionInput) GetIngresoNoAcumulable() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IngresoNoAcumulable
}

// GetIngresoNoAcumulableOk returns a tuple with the IngresoNoAcumulable field value
// and a boolean to check if the value has been set.
func (o *NominaSeparacionInput) GetIngresoNoAcumulableOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IngresoNoAcumulable, true
}

// SetIngresoNoAcumulable sets field value
func (o *NominaSeparacionInput) SetIngresoNoAcumulable(v float32) {
	o.IngresoNoAcumulable = v
}

func (o NominaSeparacionInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NominaSeparacionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total_pagado"] = o.TotalPagado
	toSerialize["num_anos_servicio"] = o.NumAnosServicio
	toSerialize["ultimo_sueldo_mens_ord"] = o.UltimoSueldoMensOrd
	toSerialize["ingreso_acumulable"] = o.IngresoAcumulable
	toSerialize["ingreso_no_acumulable"] = o.IngresoNoAcumulable
	return toSerialize, nil
}

type NullableNominaSeparacionInput struct {
	value *NominaSeparacionInput
	isSet bool
}

func (v NullableNominaSeparacionInput) Get() *NominaSeparacionInput {
	return v.value
}

func (v *NullableNominaSeparacionInput) Set(val *NominaSeparacionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableNominaSeparacionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableNominaSeparacionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNominaSeparacionInput(val *NominaSeparacionInput) *NullableNominaSeparacionInput {
	return &NullableNominaSeparacionInput{value: val, isSet: true}
}

func (v NullableNominaSeparacionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNominaSeparacionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


