/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi-go

import (
	"encoding/json"
)

// checks if the OrganizationCreateInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationCreateInput{}

// OrganizationCreateInput struct for OrganizationCreateInput
type OrganizationCreateInput struct {
	// Nombre comercial de la organización.
	Name string `json:"name"`
}

// NewOrganizationCreateInput instantiates a new OrganizationCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCreateInput(name string) *OrganizationCreateInput {
	this := OrganizationCreateInput{}
	this.Name = name
	return &this
}

// NewOrganizationCreateInputWithDefaults instantiates a new OrganizationCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCreateInputWithDefaults() *OrganizationCreateInput {
	this := OrganizationCreateInput{}
	return &this
}

// GetName returns the Name field value
func (o *OrganizationCreateInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationCreateInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationCreateInput) SetName(v string) {
	o.Name = v
}

func (o OrganizationCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationCreateInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableOrganizationCreateInput struct {
	value *OrganizationCreateInput
	isSet bool
}

func (v NullableOrganizationCreateInput) Get() *OrganizationCreateInput {
	return v.value
}

func (v *NullableOrganizationCreateInput) Set(val *OrganizationCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCreateInput(val *OrganizationCreateInput) *NullableOrganizationCreateInput {
	return &NullableOrganizationCreateInput{value: val, isSet: true}
}

func (v NullableOrganizationCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


