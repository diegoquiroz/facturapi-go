/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RetentionReadOnlyProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetentionReadOnlyProperties{}

// RetentionReadOnlyProperties struct for RetentionReadOnlyProperties
type RetentionReadOnlyProperties struct {
	// Estado actual de la retención. 
	Status *string `json:"status,omitempty"`
	// Dirección URL para verificar el estado de la retención en el portal del SAT. Este link es el mismo que aparece en el código QR, en el PDF de la retención.
	VerificationUrl *string `json:"verification_url,omitempty"`
	// Tipo de comprobante.
	Type *string `json:"type,omitempty"`
	// Folio fiscal de la retención, asignado por el SAT.
	Uuid *string `json:"uuid,omitempty"`
	Stamp *Stamp `json:"stamp,omitempty"`
	Customer *CuustomerInfo `json:"customer,omitempty"`
}

// NewRetentionReadOnlyProperties instantiates a new RetentionReadOnlyProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetentionReadOnlyProperties() *RetentionReadOnlyProperties {
	this := RetentionReadOnlyProperties{}
	return &this
}

// NewRetentionReadOnlyPropertiesWithDefaults instantiates a new RetentionReadOnlyProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetentionReadOnlyPropertiesWithDefaults() *RetentionReadOnlyProperties {
	this := RetentionReadOnlyProperties{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RetentionReadOnlyProperties) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionReadOnlyProperties) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RetentionReadOnlyProperties) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RetentionReadOnlyProperties) SetStatus(v string) {
	o.Status = &v
}

// GetVerificationUrl returns the VerificationUrl field value if set, zero value otherwise.
func (o *RetentionReadOnlyProperties) GetVerificationUrl() string {
	if o == nil || IsNil(o.VerificationUrl) {
		var ret string
		return ret
	}
	return *o.VerificationUrl
}

// GetVerificationUrlOk returns a tuple with the VerificationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionReadOnlyProperties) GetVerificationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VerificationUrl) {
		return nil, false
	}
	return o.VerificationUrl, true
}

// HasVerificationUrl returns a boolean if a field has been set.
func (o *RetentionReadOnlyProperties) HasVerificationUrl() bool {
	if o != nil && !IsNil(o.VerificationUrl) {
		return true
	}

	return false
}

// SetVerificationUrl gets a reference to the given string and assigns it to the VerificationUrl field.
func (o *RetentionReadOnlyProperties) SetVerificationUrl(v string) {
	o.VerificationUrl = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RetentionReadOnlyProperties) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionReadOnlyProperties) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RetentionReadOnlyProperties) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RetentionReadOnlyProperties) SetType(v string) {
	o.Type = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *RetentionReadOnlyProperties) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionReadOnlyProperties) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *RetentionReadOnlyProperties) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *RetentionReadOnlyProperties) SetUuid(v string) {
	o.Uuid = &v
}

// GetStamp returns the Stamp field value if set, zero value otherwise.
func (o *RetentionReadOnlyProperties) GetStamp() Stamp {
	if o == nil || IsNil(o.Stamp) {
		var ret Stamp
		return ret
	}
	return *o.Stamp
}

// GetStampOk returns a tuple with the Stamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionReadOnlyProperties) GetStampOk() (*Stamp, bool) {
	if o == nil || IsNil(o.Stamp) {
		return nil, false
	}
	return o.Stamp, true
}

// HasStamp returns a boolean if a field has been set.
func (o *RetentionReadOnlyProperties) HasStamp() bool {
	if o != nil && !IsNil(o.Stamp) {
		return true
	}

	return false
}

// SetStamp gets a reference to the given Stamp and assigns it to the Stamp field.
func (o *RetentionReadOnlyProperties) SetStamp(v Stamp) {
	o.Stamp = &v
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *RetentionReadOnlyProperties) GetCustomer() CuustomerInfo {
	if o == nil || IsNil(o.Customer) {
		var ret CuustomerInfo
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionReadOnlyProperties) GetCustomerOk() (*CuustomerInfo, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *RetentionReadOnlyProperties) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CuustomerInfo and assigns it to the Customer field.
func (o *RetentionReadOnlyProperties) SetCustomer(v CuustomerInfo) {
	o.Customer = &v
}

func (o RetentionReadOnlyProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetentionReadOnlyProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.VerificationUrl) {
		toSerialize["verification_url"] = o.VerificationUrl
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Stamp) {
		toSerialize["stamp"] = o.Stamp
	}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	return toSerialize, nil
}

type NullableRetentionReadOnlyProperties struct {
	value *RetentionReadOnlyProperties
	isSet bool
}

func (v NullableRetentionReadOnlyProperties) Get() *RetentionReadOnlyProperties {
	return v.value
}

func (v *NullableRetentionReadOnlyProperties) Set(val *RetentionReadOnlyProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableRetentionReadOnlyProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableRetentionReadOnlyProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetentionReadOnlyProperties(val *RetentionReadOnlyProperties) *NullableRetentionReadOnlyProperties {
	return &NullableRetentionReadOnlyProperties{value: val, isSet: true}
}

func (v NullableRetentionReadOnlyProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetentionReadOnlyProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


