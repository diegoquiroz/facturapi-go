/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi

import (
	"encoding/json"
	"time"
)

// checks if the RetentionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetentionInput{}

// RetentionInput struct for RetentionInput
type RetentionInput struct {
	Customer InvoiceCommonInputPropertiesAllOfCustomer `json:"customer"`
	// Clave de la retención o información de pagos de acuerdo al [catálogo del SAT](#clave-de-retencion).
	CveRetenc string `json:"cve_retenc"`
	// Fecha de expedición del comprobante en formato ISO8601 (UTC String).
	FechaExp *time.Time `json:"fecha_exp,omitempty"`
	// Si la clave de la retención es “25” (Otro tipo de retenciones), este campo se usa para registrar la descripción de la retención.
	DescRetenc *string `json:"desc_retenc,omitempty"`
	// Identificador alfanumérico para control interno de la empresa y sin relevancia fiscal.
	FolioInt *string `json:"folio_int,omitempty"`
	Periodo RetentionInputPeriodo `json:"periodo"`
	Totales RetentionInputTotales `json:"totales"`
	// Identificador opcional que puedes usar para relacionar esta retención con tus registros y poder hacer búsquedas usando este identificador. Facturapi no valida que este campo sea único.
	ExternalId *string `json:"external_id,omitempty"`
	// Identificador único que puedes usar para evitar duplicados al reintentar una petición. Puede ser cualquier cadena de texto, mientras sea única para cada documento. 
	IdempotencyKey *string `json:"idempotency_key,omitempty"`
	Complements []string `json:"complements,omitempty"`
	// En caso de que necesites incluir más información en el PDF, este campo te permite insertar código HTML con tu propio contenido.
	PdfCustomSection *string `json:"pdf_custom_section,omitempty"`
	// Código XML con la Addenda que se necesite agregar a la factura.
	Addenda *string `json:"addenda,omitempty"`
	Namespaces []InvoiceableCommonInputNamespacesInner `json:"namespaces,omitempty"`
}

// NewRetentionInput instantiates a new RetentionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetentionInput(customer InvoiceCommonInputPropertiesAllOfCustomer, cveRetenc string, periodo RetentionInputPeriodo, totales RetentionInputTotales) *RetentionInput {
	this := RetentionInput{}
	this.Customer = customer
	this.CveRetenc = cveRetenc
	this.Periodo = periodo
	this.Totales = totales
	return &this
}

// NewRetentionInputWithDefaults instantiates a new RetentionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetentionInputWithDefaults() *RetentionInput {
	this := RetentionInput{}
	return &this
}

// GetCustomer returns the Customer field value
func (o *RetentionInput) GetCustomer() InvoiceCommonInputPropertiesAllOfCustomer {
	if o == nil {
		var ret InvoiceCommonInputPropertiesAllOfCustomer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetCustomerOk() (*InvoiceCommonInputPropertiesAllOfCustomer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *RetentionInput) SetCustomer(v InvoiceCommonInputPropertiesAllOfCustomer) {
	o.Customer = v
}

// GetCveRetenc returns the CveRetenc field value
func (o *RetentionInput) GetCveRetenc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveRetenc
}

// GetCveRetencOk returns a tuple with the CveRetenc field value
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetCveRetencOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CveRetenc, true
}

// SetCveRetenc sets field value
func (o *RetentionInput) SetCveRetenc(v string) {
	o.CveRetenc = v
}

// GetFechaExp returns the FechaExp field value if set, zero value otherwise.
func (o *RetentionInput) GetFechaExp() time.Time {
	if o == nil || IsNil(o.FechaExp) {
		var ret time.Time
		return ret
	}
	return *o.FechaExp
}

// GetFechaExpOk returns a tuple with the FechaExp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetFechaExpOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FechaExp) {
		return nil, false
	}
	return o.FechaExp, true
}

// HasFechaExp returns a boolean if a field has been set.
func (o *RetentionInput) HasFechaExp() bool {
	if o != nil && !IsNil(o.FechaExp) {
		return true
	}

	return false
}

// SetFechaExp gets a reference to the given time.Time and assigns it to the FechaExp field.
func (o *RetentionInput) SetFechaExp(v time.Time) {
	o.FechaExp = &v
}

// GetDescRetenc returns the DescRetenc field value if set, zero value otherwise.
func (o *RetentionInput) GetDescRetenc() string {
	if o == nil || IsNil(o.DescRetenc) {
		var ret string
		return ret
	}
	return *o.DescRetenc
}

// GetDescRetencOk returns a tuple with the DescRetenc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetDescRetencOk() (*string, bool) {
	if o == nil || IsNil(o.DescRetenc) {
		return nil, false
	}
	return o.DescRetenc, true
}

// HasDescRetenc returns a boolean if a field has been set.
func (o *RetentionInput) HasDescRetenc() bool {
	if o != nil && !IsNil(o.DescRetenc) {
		return true
	}

	return false
}

// SetDescRetenc gets a reference to the given string and assigns it to the DescRetenc field.
func (o *RetentionInput) SetDescRetenc(v string) {
	o.DescRetenc = &v
}

// GetFolioInt returns the FolioInt field value if set, zero value otherwise.
func (o *RetentionInput) GetFolioInt() string {
	if o == nil || IsNil(o.FolioInt) {
		var ret string
		return ret
	}
	return *o.FolioInt
}

// GetFolioIntOk returns a tuple with the FolioInt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetFolioIntOk() (*string, bool) {
	if o == nil || IsNil(o.FolioInt) {
		return nil, false
	}
	return o.FolioInt, true
}

// HasFolioInt returns a boolean if a field has been set.
func (o *RetentionInput) HasFolioInt() bool {
	if o != nil && !IsNil(o.FolioInt) {
		return true
	}

	return false
}

// SetFolioInt gets a reference to the given string and assigns it to the FolioInt field.
func (o *RetentionInput) SetFolioInt(v string) {
	o.FolioInt = &v
}

// GetPeriodo returns the Periodo field value
func (o *RetentionInput) GetPeriodo() RetentionInputPeriodo {
	if o == nil {
		var ret RetentionInputPeriodo
		return ret
	}

	return o.Periodo
}

// GetPeriodoOk returns a tuple with the Periodo field value
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetPeriodoOk() (*RetentionInputPeriodo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Periodo, true
}

// SetPeriodo sets field value
func (o *RetentionInput) SetPeriodo(v RetentionInputPeriodo) {
	o.Periodo = v
}

// GetTotales returns the Totales field value
func (o *RetentionInput) GetTotales() RetentionInputTotales {
	if o == nil {
		var ret RetentionInputTotales
		return ret
	}

	return o.Totales
}

// GetTotalesOk returns a tuple with the Totales field value
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetTotalesOk() (*RetentionInputTotales, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Totales, true
}

// SetTotales sets field value
func (o *RetentionInput) SetTotales(v RetentionInputTotales) {
	o.Totales = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *RetentionInput) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *RetentionInput) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *RetentionInput) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetIdempotencyKey returns the IdempotencyKey field value if set, zero value otherwise.
func (o *RetentionInput) GetIdempotencyKey() string {
	if o == nil || IsNil(o.IdempotencyKey) {
		var ret string
		return ret
	}
	return *o.IdempotencyKey
}

// GetIdempotencyKeyOk returns a tuple with the IdempotencyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetIdempotencyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.IdempotencyKey) {
		return nil, false
	}
	return o.IdempotencyKey, true
}

// HasIdempotencyKey returns a boolean if a field has been set.
func (o *RetentionInput) HasIdempotencyKey() bool {
	if o != nil && !IsNil(o.IdempotencyKey) {
		return true
	}

	return false
}

// SetIdempotencyKey gets a reference to the given string and assigns it to the IdempotencyKey field.
func (o *RetentionInput) SetIdempotencyKey(v string) {
	o.IdempotencyKey = &v
}

// GetComplements returns the Complements field value if set, zero value otherwise.
func (o *RetentionInput) GetComplements() []string {
	if o == nil || IsNil(o.Complements) {
		var ret []string
		return ret
	}
	return o.Complements
}

// GetComplementsOk returns a tuple with the Complements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetComplementsOk() ([]string, bool) {
	if o == nil || IsNil(o.Complements) {
		return nil, false
	}
	return o.Complements, true
}

// HasComplements returns a boolean if a field has been set.
func (o *RetentionInput) HasComplements() bool {
	if o != nil && !IsNil(o.Complements) {
		return true
	}

	return false
}

// SetComplements gets a reference to the given []string and assigns it to the Complements field.
func (o *RetentionInput) SetComplements(v []string) {
	o.Complements = v
}

// GetPdfCustomSection returns the PdfCustomSection field value if set, zero value otherwise.
func (o *RetentionInput) GetPdfCustomSection() string {
	if o == nil || IsNil(o.PdfCustomSection) {
		var ret string
		return ret
	}
	return *o.PdfCustomSection
}

// GetPdfCustomSectionOk returns a tuple with the PdfCustomSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetPdfCustomSectionOk() (*string, bool) {
	if o == nil || IsNil(o.PdfCustomSection) {
		return nil, false
	}
	return o.PdfCustomSection, true
}

// HasPdfCustomSection returns a boolean if a field has been set.
func (o *RetentionInput) HasPdfCustomSection() bool {
	if o != nil && !IsNil(o.PdfCustomSection) {
		return true
	}

	return false
}

// SetPdfCustomSection gets a reference to the given string and assigns it to the PdfCustomSection field.
func (o *RetentionInput) SetPdfCustomSection(v string) {
	o.PdfCustomSection = &v
}

// GetAddenda returns the Addenda field value if set, zero value otherwise.
func (o *RetentionInput) GetAddenda() string {
	if o == nil || IsNil(o.Addenda) {
		var ret string
		return ret
	}
	return *o.Addenda
}

// GetAddendaOk returns a tuple with the Addenda field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetAddendaOk() (*string, bool) {
	if o == nil || IsNil(o.Addenda) {
		return nil, false
	}
	return o.Addenda, true
}

// HasAddenda returns a boolean if a field has been set.
func (o *RetentionInput) HasAddenda() bool {
	if o != nil && !IsNil(o.Addenda) {
		return true
	}

	return false
}

// SetAddenda gets a reference to the given string and assigns it to the Addenda field.
func (o *RetentionInput) SetAddenda(v string) {
	o.Addenda = &v
}

// GetNamespaces returns the Namespaces field value if set, zero value otherwise.
func (o *RetentionInput) GetNamespaces() []InvoiceableCommonInputNamespacesInner {
	if o == nil || IsNil(o.Namespaces) {
		var ret []InvoiceableCommonInputNamespacesInner
		return ret
	}
	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionInput) GetNamespacesOk() ([]InvoiceableCommonInputNamespacesInner, bool) {
	if o == nil || IsNil(o.Namespaces) {
		return nil, false
	}
	return o.Namespaces, true
}

// HasNamespaces returns a boolean if a field has been set.
func (o *RetentionInput) HasNamespaces() bool {
	if o != nil && !IsNil(o.Namespaces) {
		return true
	}

	return false
}

// SetNamespaces gets a reference to the given []InvoiceableCommonInputNamespacesInner and assigns it to the Namespaces field.
func (o *RetentionInput) SetNamespaces(v []InvoiceableCommonInputNamespacesInner) {
	o.Namespaces = v
}

func (o RetentionInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetentionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer"] = o.Customer
	toSerialize["cve_retenc"] = o.CveRetenc
	if !IsNil(o.FechaExp) {
		toSerialize["fecha_exp"] = o.FechaExp
	}
	if !IsNil(o.DescRetenc) {
		toSerialize["desc_retenc"] = o.DescRetenc
	}
	if !IsNil(o.FolioInt) {
		toSerialize["folio_int"] = o.FolioInt
	}
	toSerialize["periodo"] = o.Periodo
	toSerialize["totales"] = o.Totales
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.IdempotencyKey) {
		toSerialize["idempotency_key"] = o.IdempotencyKey
	}
	if !IsNil(o.Complements) {
		toSerialize["complements"] = o.Complements
	}
	if !IsNil(o.PdfCustomSection) {
		toSerialize["pdf_custom_section"] = o.PdfCustomSection
	}
	if !IsNil(o.Addenda) {
		toSerialize["addenda"] = o.Addenda
	}
	if !IsNil(o.Namespaces) {
		toSerialize["namespaces"] = o.Namespaces
	}
	return toSerialize, nil
}

type NullableRetentionInput struct {
	value *RetentionInput
	isSet bool
}

func (v NullableRetentionInput) Get() *RetentionInput {
	return v.value
}

func (v *NullableRetentionInput) Set(val *RetentionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableRetentionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableRetentionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetentionInput(val *RetentionInput) *NullableRetentionInput {
	return &NullableRetentionInput{value: val, isSet: true}
}

func (v NullableRetentionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetentionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


