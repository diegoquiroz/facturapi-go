/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RetentionPropertiesTotales type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetentionPropertiesTotales{}

// RetentionPropertiesTotales Información sobre el total de retenciones efectuadas en el periodo correspondiente.
type RetentionPropertiesTotales struct {
	// Monto total de la operación, con precisión de hasta 6 decimales.
	MontoTotOperacion *float32 `json:"monto_tot_operacion,omitempty"`
	// Monto total gravado.
	MontoTotGrav *float32 `json:"monto_tot_grav,omitempty"`
	// Monto total exento.
	MontoTotExent *float32 `json:"monto_tot_exent,omitempty"`
	// Suma de los montos de impuestos retenidos.
	MontoTotRet *float32 `json:"monto_tot_ret,omitempty"`
	ImpRetenidos []RetentionPropertiesTotalesImpRetenidosInner `json:"imp_retenidos,omitempty"`
}

// NewRetentionPropertiesTotales instantiates a new RetentionPropertiesTotales object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetentionPropertiesTotales() *RetentionPropertiesTotales {
	this := RetentionPropertiesTotales{}
	return &this
}

// NewRetentionPropertiesTotalesWithDefaults instantiates a new RetentionPropertiesTotales object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetentionPropertiesTotalesWithDefaults() *RetentionPropertiesTotales {
	this := RetentionPropertiesTotales{}
	return &this
}

// GetMontoTotOperacion returns the MontoTotOperacion field value if set, zero value otherwise.
func (o *RetentionPropertiesTotales) GetMontoTotOperacion() float32 {
	if o == nil || IsNil(o.MontoTotOperacion) {
		var ret float32
		return ret
	}
	return *o.MontoTotOperacion
}

// GetMontoTotOperacionOk returns a tuple with the MontoTotOperacion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionPropertiesTotales) GetMontoTotOperacionOk() (*float32, bool) {
	if o == nil || IsNil(o.MontoTotOperacion) {
		return nil, false
	}
	return o.MontoTotOperacion, true
}

// HasMontoTotOperacion returns a boolean if a field has been set.
func (o *RetentionPropertiesTotales) HasMontoTotOperacion() bool {
	if o != nil && !IsNil(o.MontoTotOperacion) {
		return true
	}

	return false
}

// SetMontoTotOperacion gets a reference to the given float32 and assigns it to the MontoTotOperacion field.
func (o *RetentionPropertiesTotales) SetMontoTotOperacion(v float32) {
	o.MontoTotOperacion = &v
}

// GetMontoTotGrav returns the MontoTotGrav field value if set, zero value otherwise.
func (o *RetentionPropertiesTotales) GetMontoTotGrav() float32 {
	if o == nil || IsNil(o.MontoTotGrav) {
		var ret float32
		return ret
	}
	return *o.MontoTotGrav
}

// GetMontoTotGravOk returns a tuple with the MontoTotGrav field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionPropertiesTotales) GetMontoTotGravOk() (*float32, bool) {
	if o == nil || IsNil(o.MontoTotGrav) {
		return nil, false
	}
	return o.MontoTotGrav, true
}

// HasMontoTotGrav returns a boolean if a field has been set.
func (o *RetentionPropertiesTotales) HasMontoTotGrav() bool {
	if o != nil && !IsNil(o.MontoTotGrav) {
		return true
	}

	return false
}

// SetMontoTotGrav gets a reference to the given float32 and assigns it to the MontoTotGrav field.
func (o *RetentionPropertiesTotales) SetMontoTotGrav(v float32) {
	o.MontoTotGrav = &v
}

// GetMontoTotExent returns the MontoTotExent field value if set, zero value otherwise.
func (o *RetentionPropertiesTotales) GetMontoTotExent() float32 {
	if o == nil || IsNil(o.MontoTotExent) {
		var ret float32
		return ret
	}
	return *o.MontoTotExent
}

// GetMontoTotExentOk returns a tuple with the MontoTotExent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionPropertiesTotales) GetMontoTotExentOk() (*float32, bool) {
	if o == nil || IsNil(o.MontoTotExent) {
		return nil, false
	}
	return o.MontoTotExent, true
}

// HasMontoTotExent returns a boolean if a field has been set.
func (o *RetentionPropertiesTotales) HasMontoTotExent() bool {
	if o != nil && !IsNil(o.MontoTotExent) {
		return true
	}

	return false
}

// SetMontoTotExent gets a reference to the given float32 and assigns it to the MontoTotExent field.
func (o *RetentionPropertiesTotales) SetMontoTotExent(v float32) {
	o.MontoTotExent = &v
}

// GetMontoTotRet returns the MontoTotRet field value if set, zero value otherwise.
func (o *RetentionPropertiesTotales) GetMontoTotRet() float32 {
	if o == nil || IsNil(o.MontoTotRet) {
		var ret float32
		return ret
	}
	return *o.MontoTotRet
}

// GetMontoTotRetOk returns a tuple with the MontoTotRet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionPropertiesTotales) GetMontoTotRetOk() (*float32, bool) {
	if o == nil || IsNil(o.MontoTotRet) {
		return nil, false
	}
	return o.MontoTotRet, true
}

// HasMontoTotRet returns a boolean if a field has been set.
func (o *RetentionPropertiesTotales) HasMontoTotRet() bool {
	if o != nil && !IsNil(o.MontoTotRet) {
		return true
	}

	return false
}

// SetMontoTotRet gets a reference to the given float32 and assigns it to the MontoTotRet field.
func (o *RetentionPropertiesTotales) SetMontoTotRet(v float32) {
	o.MontoTotRet = &v
}

// GetImpRetenidos returns the ImpRetenidos field value if set, zero value otherwise.
func (o *RetentionPropertiesTotales) GetImpRetenidos() []RetentionPropertiesTotalesImpRetenidosInner {
	if o == nil || IsNil(o.ImpRetenidos) {
		var ret []RetentionPropertiesTotalesImpRetenidosInner
		return ret
	}
	return o.ImpRetenidos
}

// GetImpRetenidosOk returns a tuple with the ImpRetenidos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionPropertiesTotales) GetImpRetenidosOk() ([]RetentionPropertiesTotalesImpRetenidosInner, bool) {
	if o == nil || IsNil(o.ImpRetenidos) {
		return nil, false
	}
	return o.ImpRetenidos, true
}

// HasImpRetenidos returns a boolean if a field has been set.
func (o *RetentionPropertiesTotales) HasImpRetenidos() bool {
	if o != nil && !IsNil(o.ImpRetenidos) {
		return true
	}

	return false
}

// SetImpRetenidos gets a reference to the given []RetentionPropertiesTotalesImpRetenidosInner and assigns it to the ImpRetenidos field.
func (o *RetentionPropertiesTotales) SetImpRetenidos(v []RetentionPropertiesTotalesImpRetenidosInner) {
	o.ImpRetenidos = v
}

func (o RetentionPropertiesTotales) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetentionPropertiesTotales) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MontoTotOperacion) {
		toSerialize["monto_tot_operacion"] = o.MontoTotOperacion
	}
	if !IsNil(o.MontoTotGrav) {
		toSerialize["monto_tot_grav"] = o.MontoTotGrav
	}
	if !IsNil(o.MontoTotExent) {
		toSerialize["monto_tot_exent"] = o.MontoTotExent
	}
	if !IsNil(o.MontoTotRet) {
		toSerialize["monto_tot_ret"] = o.MontoTotRet
	}
	if !IsNil(o.ImpRetenidos) {
		toSerialize["imp_retenidos"] = o.ImpRetenidos
	}
	return toSerialize, nil
}

type NullableRetentionPropertiesTotales struct {
	value *RetentionPropertiesTotales
	isSet bool
}

func (v NullableRetentionPropertiesTotales) Get() *RetentionPropertiesTotales {
	return v.value
}

func (v *NullableRetentionPropertiesTotales) Set(val *RetentionPropertiesTotales) {
	v.value = val
	v.isSet = true
}

func (v NullableRetentionPropertiesTotales) IsSet() bool {
	return v.isSet
}

func (v *NullableRetentionPropertiesTotales) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetentionPropertiesTotales(val *RetentionPropertiesTotales) *NullableRetentionPropertiesTotales {
	return &NullableRetentionPropertiesTotales{value: val, isSet: true}
}

func (v NullableRetentionPropertiesTotales) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetentionPropertiesTotales) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


