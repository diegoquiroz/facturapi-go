/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi

import (
	"encoding/json"
)

// checks if the LineItemTrasladoInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LineItemTrasladoInput{}

// LineItemTrasladoInput Conceptos incluidos en el documento
type LineItemTrasladoInput struct {
	// Cantidad de unidades incluídas del mismo concepto.
	Quantity *float32 `json:"quantity,omitempty"`
	Product LineItemTrasladoInputProduct `json:"product"`
	CustomsKeys []string `json:"customs_keys,omitempty"`
	// Código XML de tu complemento.
	Complement *string `json:"complement,omitempty"`
	Parts []PartInput `json:"parts,omitempty"`
	ThirdParty *LineItemTrasladoInputThirdParty `json:"third_party,omitempty"`
}

// NewLineItemTrasladoInput instantiates a new LineItemTrasladoInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineItemTrasladoInput(product LineItemTrasladoInputProduct) *LineItemTrasladoInput {
	this := LineItemTrasladoInput{}
	var quantity float32 = 1
	this.Quantity = &quantity
	this.Product = product
	return &this
}

// NewLineItemTrasladoInputWithDefaults instantiates a new LineItemTrasladoInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineItemTrasladoInputWithDefaults() *LineItemTrasladoInput {
	this := LineItemTrasladoInput{}
	var quantity float32 = 1
	this.Quantity = &quantity
	return &this
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *LineItemTrasladoInput) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemTrasladoInput) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *LineItemTrasladoInput) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *LineItemTrasladoInput) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetProduct returns the Product field value
func (o *LineItemTrasladoInput) GetProduct() LineItemTrasladoInputProduct {
	if o == nil {
		var ret LineItemTrasladoInputProduct
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *LineItemTrasladoInput) GetProductOk() (*LineItemTrasladoInputProduct, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *LineItemTrasladoInput) SetProduct(v LineItemTrasladoInputProduct) {
	o.Product = v
}

// GetCustomsKeys returns the CustomsKeys field value if set, zero value otherwise.
func (o *LineItemTrasladoInput) GetCustomsKeys() []string {
	if o == nil || IsNil(o.CustomsKeys) {
		var ret []string
		return ret
	}
	return o.CustomsKeys
}

// GetCustomsKeysOk returns a tuple with the CustomsKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemTrasladoInput) GetCustomsKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomsKeys) {
		return nil, false
	}
	return o.CustomsKeys, true
}

// HasCustomsKeys returns a boolean if a field has been set.
func (o *LineItemTrasladoInput) HasCustomsKeys() bool {
	if o != nil && !IsNil(o.CustomsKeys) {
		return true
	}

	return false
}

// SetCustomsKeys gets a reference to the given []string and assigns it to the CustomsKeys field.
func (o *LineItemTrasladoInput) SetCustomsKeys(v []string) {
	o.CustomsKeys = v
}

// GetComplement returns the Complement field value if set, zero value otherwise.
func (o *LineItemTrasladoInput) GetComplement() string {
	if o == nil || IsNil(o.Complement) {
		var ret string
		return ret
	}
	return *o.Complement
}

// GetComplementOk returns a tuple with the Complement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemTrasladoInput) GetComplementOk() (*string, bool) {
	if o == nil || IsNil(o.Complement) {
		return nil, false
	}
	return o.Complement, true
}

// HasComplement returns a boolean if a field has been set.
func (o *LineItemTrasladoInput) HasComplement() bool {
	if o != nil && !IsNil(o.Complement) {
		return true
	}

	return false
}

// SetComplement gets a reference to the given string and assigns it to the Complement field.
func (o *LineItemTrasladoInput) SetComplement(v string) {
	o.Complement = &v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *LineItemTrasladoInput) GetParts() []PartInput {
	if o == nil || IsNil(o.Parts) {
		var ret []PartInput
		return ret
	}
	return o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemTrasladoInput) GetPartsOk() ([]PartInput, bool) {
	if o == nil || IsNil(o.Parts) {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *LineItemTrasladoInput) HasParts() bool {
	if o != nil && !IsNil(o.Parts) {
		return true
	}

	return false
}

// SetParts gets a reference to the given []PartInput and assigns it to the Parts field.
func (o *LineItemTrasladoInput) SetParts(v []PartInput) {
	o.Parts = v
}

// GetThirdParty returns the ThirdParty field value if set, zero value otherwise.
func (o *LineItemTrasladoInput) GetThirdParty() LineItemTrasladoInputThirdParty {
	if o == nil || IsNil(o.ThirdParty) {
		var ret LineItemTrasladoInputThirdParty
		return ret
	}
	return *o.ThirdParty
}

// GetThirdPartyOk returns a tuple with the ThirdParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemTrasladoInput) GetThirdPartyOk() (*LineItemTrasladoInputThirdParty, bool) {
	if o == nil || IsNil(o.ThirdParty) {
		return nil, false
	}
	return o.ThirdParty, true
}

// HasThirdParty returns a boolean if a field has been set.
func (o *LineItemTrasladoInput) HasThirdParty() bool {
	if o != nil && !IsNil(o.ThirdParty) {
		return true
	}

	return false
}

// SetThirdParty gets a reference to the given LineItemTrasladoInputThirdParty and assigns it to the ThirdParty field.
func (o *LineItemTrasladoInput) SetThirdParty(v LineItemTrasladoInputThirdParty) {
	o.ThirdParty = &v
}

func (o LineItemTrasladoInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LineItemTrasladoInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	toSerialize["product"] = o.Product
	if !IsNil(o.CustomsKeys) {
		toSerialize["customs_keys"] = o.CustomsKeys
	}
	if !IsNil(o.Complement) {
		toSerialize["complement"] = o.Complement
	}
	if !IsNil(o.Parts) {
		toSerialize["parts"] = o.Parts
	}
	if !IsNil(o.ThirdParty) {
		toSerialize["third_party"] = o.ThirdParty
	}
	return toSerialize, nil
}

type NullableLineItemTrasladoInput struct {
	value *LineItemTrasladoInput
	isSet bool
}

func (v NullableLineItemTrasladoInput) Get() *LineItemTrasladoInput {
	return v.value
}

func (v *NullableLineItemTrasladoInput) Set(val *LineItemTrasladoInput) {
	v.value = val
	v.isSet = true
}

func (v NullableLineItemTrasladoInput) IsSet() bool {
	return v.isSet
}

func (v *NullableLineItemTrasladoInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineItemTrasladoInput(val *LineItemTrasladoInput) *NullableLineItemTrasladoInput {
	return &NullableLineItemTrasladoInput{value: val, isSet: true}
}

func (v NullableLineItemTrasladoInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineItemTrasladoInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


