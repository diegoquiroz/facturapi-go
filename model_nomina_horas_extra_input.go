/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi

import (
	"encoding/json"
)

// checks if the NominaHorasExtraInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NominaHorasExtraInput{}

// NominaHorasExtraInput struct for NominaHorasExtraInput
type NominaHorasExtraInput struct {
	// Número de días en que el trabajador laboró horas extra adicionales a su jornada normal de trabajo.
	Dias int32 `json:"dias"`
	// Clave del catálogo [Tipo de Horas](#tipo-de-Horas).
	TipoHoras string `json:"tipo_horas"`
	// Número de horas extra trabajadas en el periodo.
	HorasExtra int32 `json:"horas_extra"`
	// Importe pagado por las horas extra.
	ImportePagado float32 `json:"importe_pagado"`
}

// NewNominaHorasExtraInput instantiates a new NominaHorasExtraInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNominaHorasExtraInput(dias int32, tipoHoras string, horasExtra int32, importePagado float32) *NominaHorasExtraInput {
	this := NominaHorasExtraInput{}
	this.Dias = dias
	this.TipoHoras = tipoHoras
	this.HorasExtra = horasExtra
	this.ImportePagado = importePagado
	return &this
}

// NewNominaHorasExtraInputWithDefaults instantiates a new NominaHorasExtraInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNominaHorasExtraInputWithDefaults() *NominaHorasExtraInput {
	this := NominaHorasExtraInput{}
	return &this
}

// GetDias returns the Dias field value
func (o *NominaHorasExtraInput) GetDias() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Dias
}

// GetDiasOk returns a tuple with the Dias field value
// and a boolean to check if the value has been set.
func (o *NominaHorasExtraInput) GetDiasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dias, true
}

// SetDias sets field value
func (o *NominaHorasExtraInput) SetDias(v int32) {
	o.Dias = v
}

// GetTipoHoras returns the TipoHoras field value
func (o *NominaHorasExtraInput) GetTipoHoras() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TipoHoras
}

// GetTipoHorasOk returns a tuple with the TipoHoras field value
// and a boolean to check if the value has been set.
func (o *NominaHorasExtraInput) GetTipoHorasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TipoHoras, true
}

// SetTipoHoras sets field value
func (o *NominaHorasExtraInput) SetTipoHoras(v string) {
	o.TipoHoras = v
}

// GetHorasExtra returns the HorasExtra field value
func (o *NominaHorasExtraInput) GetHorasExtra() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HorasExtra
}

// GetHorasExtraOk returns a tuple with the HorasExtra field value
// and a boolean to check if the value has been set.
func (o *NominaHorasExtraInput) GetHorasExtraOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HorasExtra, true
}

// SetHorasExtra sets field value
func (o *NominaHorasExtraInput) SetHorasExtra(v int32) {
	o.HorasExtra = v
}

// GetImportePagado returns the ImportePagado field value
func (o *NominaHorasExtraInput) GetImportePagado() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ImportePagado
}

// GetImportePagadoOk returns a tuple with the ImportePagado field value
// and a boolean to check if the value has been set.
func (o *NominaHorasExtraInput) GetImportePagadoOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImportePagado, true
}

// SetImportePagado sets field value
func (o *NominaHorasExtraInput) SetImportePagado(v float32) {
	o.ImportePagado = v
}

func (o NominaHorasExtraInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NominaHorasExtraInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dias"] = o.Dias
	toSerialize["tipo_horas"] = o.TipoHoras
	toSerialize["horas_extra"] = o.HorasExtra
	toSerialize["importe_pagado"] = o.ImportePagado
	return toSerialize, nil
}

type NullableNominaHorasExtraInput struct {
	value *NominaHorasExtraInput
	isSet bool
}

func (v NullableNominaHorasExtraInput) Get() *NominaHorasExtraInput {
	return v.value
}

func (v *NullableNominaHorasExtraInput) Set(val *NominaHorasExtraInput) {
	v.value = val
	v.isSet = true
}

func (v NullableNominaHorasExtraInput) IsSet() bool {
	return v.isSet
}

func (v *NullableNominaHorasExtraInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNominaHorasExtraInput(val *NominaHorasExtraInput) *NullableNominaHorasExtraInput {
	return &NullableNominaHorasExtraInput{value: val, isSet: true}
}

func (v NullableNominaHorasExtraInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNominaHorasExtraInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


