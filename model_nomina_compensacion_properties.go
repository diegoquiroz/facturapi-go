/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NominaCompensacionProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NominaCompensacionProperties{}

// NominaCompensacionProperties Objeto con información referente a la compensación de saldos a favor de un trabajador.
type NominaCompensacionProperties struct {
	// Monto por saldo a favor determinado por el patrón al trabajador en periodos o ejercicios anteriores.
	SaldoAFavor *float32 `json:"saldo_a_favor,omitempty"`
	// Año en que se determinó el saldo a favor del trabajador.
	Ano *int32 `json:"ano,omitempty"`
	// Remanente del saldo a favor del trabajador.
	RemanenteSalFav *float32 `json:"remanente_sal_fav,omitempty"`
}

// NewNominaCompensacionProperties instantiates a new NominaCompensacionProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNominaCompensacionProperties() *NominaCompensacionProperties {
	this := NominaCompensacionProperties{}
	return &this
}

// NewNominaCompensacionPropertiesWithDefaults instantiates a new NominaCompensacionProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNominaCompensacionPropertiesWithDefaults() *NominaCompensacionProperties {
	this := NominaCompensacionProperties{}
	return &this
}

// GetSaldoAFavor returns the SaldoAFavor field value if set, zero value otherwise.
func (o *NominaCompensacionProperties) GetSaldoAFavor() float32 {
	if o == nil || IsNil(o.SaldoAFavor) {
		var ret float32
		return ret
	}
	return *o.SaldoAFavor
}

// GetSaldoAFavorOk returns a tuple with the SaldoAFavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaCompensacionProperties) GetSaldoAFavorOk() (*float32, bool) {
	if o == nil || IsNil(o.SaldoAFavor) {
		return nil, false
	}
	return o.SaldoAFavor, true
}

// HasSaldoAFavor returns a boolean if a field has been set.
func (o *NominaCompensacionProperties) HasSaldoAFavor() bool {
	if o != nil && !IsNil(o.SaldoAFavor) {
		return true
	}

	return false
}

// SetSaldoAFavor gets a reference to the given float32 and assigns it to the SaldoAFavor field.
func (o *NominaCompensacionProperties) SetSaldoAFavor(v float32) {
	o.SaldoAFavor = &v
}

// GetAno returns the Ano field value if set, zero value otherwise.
func (o *NominaCompensacionProperties) GetAno() int32 {
	if o == nil || IsNil(o.Ano) {
		var ret int32
		return ret
	}
	return *o.Ano
}

// GetAnoOk returns a tuple with the Ano field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaCompensacionProperties) GetAnoOk() (*int32, bool) {
	if o == nil || IsNil(o.Ano) {
		return nil, false
	}
	return o.Ano, true
}

// HasAno returns a boolean if a field has been set.
func (o *NominaCompensacionProperties) HasAno() bool {
	if o != nil && !IsNil(o.Ano) {
		return true
	}

	return false
}

// SetAno gets a reference to the given int32 and assigns it to the Ano field.
func (o *NominaCompensacionProperties) SetAno(v int32) {
	o.Ano = &v
}

// GetRemanenteSalFav returns the RemanenteSalFav field value if set, zero value otherwise.
func (o *NominaCompensacionProperties) GetRemanenteSalFav() float32 {
	if o == nil || IsNil(o.RemanenteSalFav) {
		var ret float32
		return ret
	}
	return *o.RemanenteSalFav
}

// GetRemanenteSalFavOk returns a tuple with the RemanenteSalFav field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaCompensacionProperties) GetRemanenteSalFavOk() (*float32, bool) {
	if o == nil || IsNil(o.RemanenteSalFav) {
		return nil, false
	}
	return o.RemanenteSalFav, true
}

// HasRemanenteSalFav returns a boolean if a field has been set.
func (o *NominaCompensacionProperties) HasRemanenteSalFav() bool {
	if o != nil && !IsNil(o.RemanenteSalFav) {
		return true
	}

	return false
}

// SetRemanenteSalFav gets a reference to the given float32 and assigns it to the RemanenteSalFav field.
func (o *NominaCompensacionProperties) SetRemanenteSalFav(v float32) {
	o.RemanenteSalFav = &v
}

func (o NominaCompensacionProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NominaCompensacionProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SaldoAFavor) {
		toSerialize["saldo_a_favor"] = o.SaldoAFavor
	}
	if !IsNil(o.Ano) {
		toSerialize["ano"] = o.Ano
	}
	if !IsNil(o.RemanenteSalFav) {
		toSerialize["remanente_sal_fav"] = o.RemanenteSalFav
	}
	return toSerialize, nil
}

type NullableNominaCompensacionProperties struct {
	value *NominaCompensacionProperties
	isSet bool
}

func (v NullableNominaCompensacionProperties) Get() *NominaCompensacionProperties {
	return v.value
}

func (v *NullableNominaCompensacionProperties) Set(val *NominaCompensacionProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableNominaCompensacionProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableNominaCompensacionProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNominaCompensacionProperties(val *NominaCompensacionProperties) *NullableNominaCompensacionProperties {
	return &NullableNominaCompensacionProperties{value: val, isSet: true}
}

func (v NullableNominaCompensacionProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNominaCompensacionProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


