/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi-go

import (
	"encoding/json"
)

// checks if the PaymentInputRelatedDocumentsInnerTaxesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentInputRelatedDocumentsInnerTaxesInner{}

// PaymentInputRelatedDocumentsInnerTaxesInner struct for PaymentInputRelatedDocumentsInnerTaxesInner
type PaymentInputRelatedDocumentsInnerTaxesInner struct {
	// Base utilizada para el cálculo del impuestos. 
	Base float32 `json:"base"`
	// Tipo de impuesto. 
	Type string `json:"type"`
	// Tasa o cuota del impuesto 
	Rate float32 `json:"rate"`
	// Tipo factor.
	Factor *string `json:"factor,omitempty"`
	// Indica si el impuesto es una retención (`true`) o un traslado (`false`).
	Withholding *bool `json:"withholding,omitempty"`
}

// NewPaymentInputRelatedDocumentsInnerTaxesInner instantiates a new PaymentInputRelatedDocumentsInnerTaxesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentInputRelatedDocumentsInnerTaxesInner(base float32, type_ string, rate float32) *PaymentInputRelatedDocumentsInnerTaxesInner {
	this := PaymentInputRelatedDocumentsInnerTaxesInner{}
	this.Base = base
	this.Type = type_
	this.Rate = rate
	var factor string = "Tasa"
	this.Factor = &factor
	var withholding bool = false
	this.Withholding = &withholding
	return &this
}

// NewPaymentInputRelatedDocumentsInnerTaxesInnerWithDefaults instantiates a new PaymentInputRelatedDocumentsInnerTaxesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentInputRelatedDocumentsInnerTaxesInnerWithDefaults() *PaymentInputRelatedDocumentsInnerTaxesInner {
	this := PaymentInputRelatedDocumentsInnerTaxesInner{}
	var factor string = "Tasa"
	this.Factor = &factor
	var withholding bool = false
	this.Withholding = &withholding
	return &this
}

// GetBase returns the Base field value
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetBase() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Base
}

// GetBaseOk returns a tuple with the Base field value
// and a boolean to check if the value has been set.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetBaseOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Base, true
}

// SetBase sets field value
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) SetBase(v float32) {
	o.Base = v
}

// GetType returns the Type field value
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) SetType(v string) {
	o.Type = v
}

// GetRate returns the Rate field value
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) SetRate(v float32) {
	o.Rate = v
}

// GetFactor returns the Factor field value if set, zero value otherwise.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetFactor() string {
	if o == nil || IsNil(o.Factor) {
		var ret string
		return ret
	}
	return *o.Factor
}

// GetFactorOk returns a tuple with the Factor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetFactorOk() (*string, bool) {
	if o == nil || IsNil(o.Factor) {
		return nil, false
	}
	return o.Factor, true
}

// HasFactor returns a boolean if a field has been set.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) HasFactor() bool {
	if o != nil && !IsNil(o.Factor) {
		return true
	}

	return false
}

// SetFactor gets a reference to the given string and assigns it to the Factor field.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) SetFactor(v string) {
	o.Factor = &v
}

// GetWithholding returns the Withholding field value if set, zero value otherwise.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetWithholding() bool {
	if o == nil || IsNil(o.Withholding) {
		var ret bool
		return ret
	}
	return *o.Withholding
}

// GetWithholdingOk returns a tuple with the Withholding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) GetWithholdingOk() (*bool, bool) {
	if o == nil || IsNil(o.Withholding) {
		return nil, false
	}
	return o.Withholding, true
}

// HasWithholding returns a boolean if a field has been set.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) HasWithholding() bool {
	if o != nil && !IsNil(o.Withholding) {
		return true
	}

	return false
}

// SetWithholding gets a reference to the given bool and assigns it to the Withholding field.
func (o *PaymentInputRelatedDocumentsInnerTaxesInner) SetWithholding(v bool) {
	o.Withholding = &v
}

func (o PaymentInputRelatedDocumentsInnerTaxesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentInputRelatedDocumentsInnerTaxesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["base"] = o.Base
	toSerialize["type"] = o.Type
	toSerialize["rate"] = o.Rate
	if !IsNil(o.Factor) {
		toSerialize["factor"] = o.Factor
	}
	if !IsNil(o.Withholding) {
		toSerialize["withholding"] = o.Withholding
	}
	return toSerialize, nil
}

type NullablePaymentInputRelatedDocumentsInnerTaxesInner struct {
	value *PaymentInputRelatedDocumentsInnerTaxesInner
	isSet bool
}

func (v NullablePaymentInputRelatedDocumentsInnerTaxesInner) Get() *PaymentInputRelatedDocumentsInnerTaxesInner {
	return v.value
}

func (v *NullablePaymentInputRelatedDocumentsInnerTaxesInner) Set(val *PaymentInputRelatedDocumentsInnerTaxesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentInputRelatedDocumentsInnerTaxesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentInputRelatedDocumentsInnerTaxesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentInputRelatedDocumentsInnerTaxesInner(val *PaymentInputRelatedDocumentsInnerTaxesInner) *NullablePaymentInputRelatedDocumentsInnerTaxesInner {
	return &NullablePaymentInputRelatedDocumentsInnerTaxesInner{value: val, isSet: true}
}

func (v NullablePaymentInputRelatedDocumentsInnerTaxesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentInputRelatedDocumentsInnerTaxesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


