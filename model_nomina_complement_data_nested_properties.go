/*
Facturapi

<br /> <br />  En esta página enlistamos todos los métodos disponibles en la API de Facturapi, así como la referencia completa de los parámetros que acepta cada uno. Para ver las propiedades anidadas de un objeto o arreglo de objetos, puedes hacer clic sobre el nombre del campo y expandirlo.  La API de Facturapi está diseñada con el estándar [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST) en mente. Los endpoints de la API están agrupados por recursos, tienen URLs predecibles, las respuestas tienen formato JSON y usamos códigos HTTP de respuesta, autenticación y verbos estándar.  Durante el desarrollo, puedes usar la API de Facturapi en ambiente Test y las facturas que emitas no se enviarán al SAT ni tendrán validez fiscal.  La llave secreta que utilices para autenticarte determinará tanto el ambiente en el que se creará la factura (Test o Live), así como la organización a utilizar como emisor de tu factura, o bien como dueña del recurso que solicites crear. 

API version: 2.0
Contact: soporte@facturapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package facturapi

import (
	"encoding/json"
)

// checks if the NominaComplementDataNestedProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NominaComplementDataNestedProperties{}

// NominaComplementDataNestedProperties struct for NominaComplementDataNestedProperties
type NominaComplementDataNestedProperties struct {
	Emisor *NominaEmisorProperties `json:"emisor,omitempty"`
	Receptor *NominaReceptorProperties `json:"receptor,omitempty"`
	Percepciones *NominaPercepcionesProperties `json:"percepciones,omitempty"`
	Deducciones []NominaDeduccionProperties `json:"deducciones,omitempty"`
	OtrosPagos []NominaComplementDataNestedPropertiesOtrosPagosInner `json:"otros_pagos,omitempty"`
	Incapacidades []NominaIncapacidadProperties `json:"incapacidades,omitempty"`
}

// NewNominaComplementDataNestedProperties instantiates a new NominaComplementDataNestedProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNominaComplementDataNestedProperties() *NominaComplementDataNestedProperties {
	this := NominaComplementDataNestedProperties{}
	return &this
}

// NewNominaComplementDataNestedPropertiesWithDefaults instantiates a new NominaComplementDataNestedProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNominaComplementDataNestedPropertiesWithDefaults() *NominaComplementDataNestedProperties {
	this := NominaComplementDataNestedProperties{}
	return &this
}

// GetEmisor returns the Emisor field value if set, zero value otherwise.
func (o *NominaComplementDataNestedProperties) GetEmisor() NominaEmisorProperties {
	if o == nil || IsNil(o.Emisor) {
		var ret NominaEmisorProperties
		return ret
	}
	return *o.Emisor
}

// GetEmisorOk returns a tuple with the Emisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataNestedProperties) GetEmisorOk() (*NominaEmisorProperties, bool) {
	if o == nil || IsNil(o.Emisor) {
		return nil, false
	}
	return o.Emisor, true
}

// HasEmisor returns a boolean if a field has been set.
func (o *NominaComplementDataNestedProperties) HasEmisor() bool {
	if o != nil && !IsNil(o.Emisor) {
		return true
	}

	return false
}

// SetEmisor gets a reference to the given NominaEmisorProperties and assigns it to the Emisor field.
func (o *NominaComplementDataNestedProperties) SetEmisor(v NominaEmisorProperties) {
	o.Emisor = &v
}

// GetReceptor returns the Receptor field value if set, zero value otherwise.
func (o *NominaComplementDataNestedProperties) GetReceptor() NominaReceptorProperties {
	if o == nil || IsNil(o.Receptor) {
		var ret NominaReceptorProperties
		return ret
	}
	return *o.Receptor
}

// GetReceptorOk returns a tuple with the Receptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataNestedProperties) GetReceptorOk() (*NominaReceptorProperties, bool) {
	if o == nil || IsNil(o.Receptor) {
		return nil, false
	}
	return o.Receptor, true
}

// HasReceptor returns a boolean if a field has been set.
func (o *NominaComplementDataNestedProperties) HasReceptor() bool {
	if o != nil && !IsNil(o.Receptor) {
		return true
	}

	return false
}

// SetReceptor gets a reference to the given NominaReceptorProperties and assigns it to the Receptor field.
func (o *NominaComplementDataNestedProperties) SetReceptor(v NominaReceptorProperties) {
	o.Receptor = &v
}

// GetPercepciones returns the Percepciones field value if set, zero value otherwise.
func (o *NominaComplementDataNestedProperties) GetPercepciones() NominaPercepcionesProperties {
	if o == nil || IsNil(o.Percepciones) {
		var ret NominaPercepcionesProperties
		return ret
	}
	return *o.Percepciones
}

// GetPercepcionesOk returns a tuple with the Percepciones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataNestedProperties) GetPercepcionesOk() (*NominaPercepcionesProperties, bool) {
	if o == nil || IsNil(o.Percepciones) {
		return nil, false
	}
	return o.Percepciones, true
}

// HasPercepciones returns a boolean if a field has been set.
func (o *NominaComplementDataNestedProperties) HasPercepciones() bool {
	if o != nil && !IsNil(o.Percepciones) {
		return true
	}

	return false
}

// SetPercepciones gets a reference to the given NominaPercepcionesProperties and assigns it to the Percepciones field.
func (o *NominaComplementDataNestedProperties) SetPercepciones(v NominaPercepcionesProperties) {
	o.Percepciones = &v
}

// GetDeducciones returns the Deducciones field value if set, zero value otherwise.
func (o *NominaComplementDataNestedProperties) GetDeducciones() []NominaDeduccionProperties {
	if o == nil || IsNil(o.Deducciones) {
		var ret []NominaDeduccionProperties
		return ret
	}
	return o.Deducciones
}

// GetDeduccionesOk returns a tuple with the Deducciones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataNestedProperties) GetDeduccionesOk() ([]NominaDeduccionProperties, bool) {
	if o == nil || IsNil(o.Deducciones) {
		return nil, false
	}
	return o.Deducciones, true
}

// HasDeducciones returns a boolean if a field has been set.
func (o *NominaComplementDataNestedProperties) HasDeducciones() bool {
	if o != nil && !IsNil(o.Deducciones) {
		return true
	}

	return false
}

// SetDeducciones gets a reference to the given []NominaDeduccionProperties and assigns it to the Deducciones field.
func (o *NominaComplementDataNestedProperties) SetDeducciones(v []NominaDeduccionProperties) {
	o.Deducciones = v
}

// GetOtrosPagos returns the OtrosPagos field value if set, zero value otherwise.
func (o *NominaComplementDataNestedProperties) GetOtrosPagos() []NominaComplementDataNestedPropertiesOtrosPagosInner {
	if o == nil || IsNil(o.OtrosPagos) {
		var ret []NominaComplementDataNestedPropertiesOtrosPagosInner
		return ret
	}
	return o.OtrosPagos
}

// GetOtrosPagosOk returns a tuple with the OtrosPagos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataNestedProperties) GetOtrosPagosOk() ([]NominaComplementDataNestedPropertiesOtrosPagosInner, bool) {
	if o == nil || IsNil(o.OtrosPagos) {
		return nil, false
	}
	return o.OtrosPagos, true
}

// HasOtrosPagos returns a boolean if a field has been set.
func (o *NominaComplementDataNestedProperties) HasOtrosPagos() bool {
	if o != nil && !IsNil(o.OtrosPagos) {
		return true
	}

	return false
}

// SetOtrosPagos gets a reference to the given []NominaComplementDataNestedPropertiesOtrosPagosInner and assigns it to the OtrosPagos field.
func (o *NominaComplementDataNestedProperties) SetOtrosPagos(v []NominaComplementDataNestedPropertiesOtrosPagosInner) {
	o.OtrosPagos = v
}

// GetIncapacidades returns the Incapacidades field value if set, zero value otherwise.
func (o *NominaComplementDataNestedProperties) GetIncapacidades() []NominaIncapacidadProperties {
	if o == nil || IsNil(o.Incapacidades) {
		var ret []NominaIncapacidadProperties
		return ret
	}
	return o.Incapacidades
}

// GetIncapacidadesOk returns a tuple with the Incapacidades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NominaComplementDataNestedProperties) GetIncapacidadesOk() ([]NominaIncapacidadProperties, bool) {
	if o == nil || IsNil(o.Incapacidades) {
		return nil, false
	}
	return o.Incapacidades, true
}

// HasIncapacidades returns a boolean if a field has been set.
func (o *NominaComplementDataNestedProperties) HasIncapacidades() bool {
	if o != nil && !IsNil(o.Incapacidades) {
		return true
	}

	return false
}

// SetIncapacidades gets a reference to the given []NominaIncapacidadProperties and assigns it to the Incapacidades field.
func (o *NominaComplementDataNestedProperties) SetIncapacidades(v []NominaIncapacidadProperties) {
	o.Incapacidades = v
}

func (o NominaComplementDataNestedProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NominaComplementDataNestedProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Emisor) {
		toSerialize["emisor"] = o.Emisor
	}
	if !IsNil(o.Receptor) {
		toSerialize["receptor"] = o.Receptor
	}
	if !IsNil(o.Percepciones) {
		toSerialize["percepciones"] = o.Percepciones
	}
	if !IsNil(o.Deducciones) {
		toSerialize["deducciones"] = o.Deducciones
	}
	if !IsNil(o.OtrosPagos) {
		toSerialize["otros_pagos"] = o.OtrosPagos
	}
	if !IsNil(o.Incapacidades) {
		toSerialize["incapacidades"] = o.Incapacidades
	}
	return toSerialize, nil
}

type NullableNominaComplementDataNestedProperties struct {
	value *NominaComplementDataNestedProperties
	isSet bool
}

func (v NullableNominaComplementDataNestedProperties) Get() *NominaComplementDataNestedProperties {
	return v.value
}

func (v *NullableNominaComplementDataNestedProperties) Set(val *NominaComplementDataNestedProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableNominaComplementDataNestedProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableNominaComplementDataNestedProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNominaComplementDataNestedProperties(val *NominaComplementDataNestedProperties) *NullableNominaComplementDataNestedProperties {
	return &NullableNominaComplementDataNestedProperties{value: val, isSet: true}
}

func (v NullableNominaComplementDataNestedProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNominaComplementDataNestedProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


